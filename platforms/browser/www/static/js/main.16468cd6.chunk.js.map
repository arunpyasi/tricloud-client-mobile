{"version":3,"sources":["assets/img/damir-bosnjak.jpg","assets/img/mike.jpg","assets/img/faces/ayo-ogunseinde-2.jpg","assets/img/faces/joe-gardner-2.jpg","assets/img/faces/clem-onojeghuo-2.jpg","logo.svg","service/AuthService.jsx","components/Login/Login.jsx","components/Login/withAuth.jsx","components/Sidebar/Sidebar.jsx","components/Stats/Stats.jsx","components/CardElements/CardAuthor.jsx","views/Dashboard/Dashboard.jsx","components/FormInputs/FormInputs.jsx","components/CustomButton/CustomButton.jsx","variables/agents.jsx","views/UserPage/UserPage.jsx","service/Api.jsx","views/Agents/Agents.jsx","components/Logout/Logout.jsx","views/Settings/Settings.jsx","routes/dashboard.jsx","components/Header/Header.jsx","components/Footer/Footer.jsx","components/UsageBar/UsageBar.jsx","components/Terminal/Terminal.jsx","components/MemDonut/MemDonut.jsx","service/utility.js","components/TaskManager/TaskManager.jsx","layouts/Dashboard/Dashboard.jsx","views/AgentDetail/AgentDetail.jsx","index.js","variables/charts.jsx"],"names":["module","exports","__webpack_require__","p","AuthService","domain","Object","classCallCheck","this","fetch","bind","login","getProfile","username","password","_this","concat","method","body","JSON","stringify","userid","then","res","console","log","setToken","data","api","Promise","resolve","token","getToken","isTokenExpired","decoded","decode","e","Date","now","err","jwtToken","localStorage","setItem","getItem","removeItem","url","options","headers","Accept","Content-Type","loggedIn","objectSpread","_checkStatus","response","json","status","error","Error","statusText","Login","possibleConstructorReturn","getPrototypeOf","call","handleChange","assertThisInitialized","handleFormSubmit","Auth","props","history","replace","react_default","a","createElement","className","onSubmit","placeholder","name","type","onChange","value","_this2","preventDefault","state","catch","alert","setState","defineProperty","target","Component","withAuth","AuthComponent","_Component","AuthWrapped","user","inherits","createClass","key","profile","logout","ps","Stats","stats","i","children","length","push","t","React","CardAuthor","reactstrap_es","xs","sm","md","lg","tag","components_Stats_Stats","react_chartjs_2_es","dashboard24HoursPerformanceChart","width","height","dashboardEmailStatisticsChart","dashboardNASDAQChart","href","link","src","avatar","alt","avatarAlt","title","description","FieldGroup","focus","_this$props","label","addonLeft","addonRight","formGroupProps","labelProps","inputProps","inputGroupProps","inputGroupAddonProps","classes","undefined","assign","onFocus","onBlur","FormInputs","apply","arguments","row","ncols","FormInputs_FieldGroup","proprieties","CustomButton","simple","round","icon","neutral","leftLabel","rightLabel","wd","fab","rest","objectWithoutProperties","btnClasses","cx","btn-simple","btn-round","btn-icon","btn-neutral","btn-wd","btn-link","btn-fab","thead","damirBosnjak","CardElements_CardAuthor","mike","ayoOgunseinde2","components_CustomButton_CustomButton","size","color","outline","joeGardner2","clemOnojeghuo2","components_FormInputs_FormInputs","disabled","defaultValue","Api","API_URL","route","Api-key","Agents","agents","agentsinfo","agentsempty","handleDelete","notify","getAgents","getData","result","agentsinfos","map","info","id","systeminfo","os","hostname","owner","platform","platformVersion","active","prop","_this3","agentID","deleteData","place","msg","message","autoDismiss","refs","notificationAlert","emptyinfo","_this4","dist_default","ref","responsive","Link","to","onClick","Settings","visible","onDismiss","Math","floor","random","isOpen","toggle","data-notify","block","dashRoutes","path","component","Logout","pros","handleLogout","redirect","pathTo","Header","dropdownOpen","dropdownToggle","dashboardRoutes","collapse","views","location","pathname","document","documentElement","classList","sidebarToggle","window","innerWidth","addEventListener","updateColor","indexOf","expand","fluid","openSidebar","getBrand","navbar","addonType","nav","caret","right","Footer","default","getYear","Sidebar","activeRoute","routeName","navigator","PerfectScrollbar","sidebar","suppressScrollX","suppressScrollY","destroy","data-color","bgColor","data-active-color","activeColor","logo","routes","pro","NavLink","activeClassName","UsageBar","divref","createRef","componentheight","getElementById","clientHeight","componentwidth","clientWidth","displayDCPU","_redraw","temp","d3","style","redraw","margin","top","bottom","left","svg","append","attr","select","j","selectAll","remove","generate","Terminal","myref","onMessage","outputFromAgent","sendtows","output","xterm","write","xTerm","applyAddon","fit","open","current","on","overflow","position","cols","rows","cursorBlink","MemDonut","sca","displayMem","firstChild","removeChild","memory","cheight","cwidth","category","cateColor","radius","min","innerRadius","outerRadius","legendRectSize","legendSpacing","scale","range","formatPercent","pie","d","sort","arc","svgX","svgY","datum","enter","inits","each","_current","transition","duration","count","text","legend","getPath","getArc","donut","attrTween","encodeMsg","msgstr","connid","cmdtype","flowtype","bodyUarray","connidarr","Uint16Array","headUarr","Uint8Array","TextEncoder","encode","toConsumableArray","buffer","titles","TaskManager","getFilteredProcesses","termdata","filter","element","updateTerminal","dataloaded","Processes","item","AgentDetail","agentid","match","params","agentId","agentinfo","realcpumem_usage","avgcpu_usage","allcpu_usage","memusage","netusage","stat_timestamp","netspeed","getAgentData","webSocketResponse","terminalToWs","ProcessTerminal","ProcessSystemStat","startTerminal","terminalRef","websocketRef","taskmanagerRef","sys_usage","head","event","myReader","FileReader","readAsArrayBuffer","_parsePacket","arrbuf","offset","byteLength","headerbuf","slice","headerdataview","DataView","getUint16","getUint8","flow","bodybuff","bodydataview","rawstr","TextDecoder","parse","decodedString","String","fromCharCode","parsePacket","srcElement","_parsePacket2","slicedToArray","_func","header","Data","respHead","respBody","cpu_cores","totalcpu_usage","reduce","previous","total_mem","free_mem","mem_usage","new_sentbytes","new_recvbytes","sentbytes_diff","recvbytes_diff","stat_timestamp_diff","time_diff","sentbytes","recvbytes","up","down","out","sendMessage","entries","_ref","_ref2","react_moment_dist_default","tz","format","fromNow","toString","_ref3","_ref4","formatBytes","b","f","parseFloat","pow","toFixed","components_UsageBar_UsageBar","keys","MemDonut_MemDonut","components_Terminal_Terminal","TaskManager_TaskManager","Interval","Timeout","build_default","Dashboard","handleActiveClick","handleBgClick","backgroundColor","mainPanel","action","scrollTop","scrollingElement","components_Sidebar_Sidebar","components_Header_Header","Switch","Route","Redirect","from","components_Footer_Footer","hist","createBrowserHistory","ReactDOM","render","Router","exact","canvas","labels","datasets","borderColor","pointRadius","pointHoverRadius","borderWidth","display","tooltips","enabled","scales","yAxes","ticks","fontColor","beginAtZero","maxTicksLimit","gridLines","drawBorder","zeroLineColor","xAxes","barPercentage","padding","pieceLabel","precision","fill","pointBorderColor","pointBorderWidth"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sbCCnBC,aACjB,SAAAA,EAAYC,GAASC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GACjBI,KAAKH,OAASA,GAAU,wBACxBG,KAAKC,MAAQD,KAAKC,MAAMC,KAAKF,MAC7BA,KAAKG,MAAQH,KAAKG,MAAMD,KAAKF,MAC7BA,KAAKI,WAAaJ,KAAKI,WAAWF,KAAKF,wDAGrCK,EAAUC,GAAU,IAAAC,EAAAP,KAEtB,OAAOA,KAAKC,MAAL,GAAAO,OAAcR,KAAKH,OAAnB,iBAA0C,CAC7CY,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjBC,OAASR,EACTC,SAAWA,MAEhBQ,KAAK,SAAAC,GAGJ,OAFAC,QAAQC,IAAIF,GACZR,EAAKW,SAASH,EAAII,KAAKC,KAChBC,QAAQC,QAAQP,wCAM3B,IAAMQ,EAAQvB,KAAKwB,WACnB,QAASD,IAAUvB,KAAKyB,eAAeF,0CAG5BA,GACX,IACI,IAAMG,EAAUC,IAAOJ,GAEvB,OADAP,QAAQC,IAAIS,GACRA,EAAQE,EAAIC,KAAKC,MAAQ,IAMjC,MAAOC,GACH,OAAO,oCAINC,GAELC,aAAaC,QAAQ,YAAaF,sCAKlC,OAAOC,aAAaE,QAAQ,8CAK5BF,aAAaG,WAAW,kDAIxB,OAAOT,IAAO3B,KAAKwB,0JAIjBa,EAAKC,GAEP,IAAMC,EAAU,CACZC,OAAU,mBACVC,eAAgB,oBAOpB,OAJIzC,KAAK0C,aACLH,EAAO,cAAoB,UAAYvC,KAAKwB,YAGzCvB,MAAMoC,EAADvC,OAAA6C,EAAA,EAAA7C,CAAA,CACRyC,WACGD,IAEFxB,KAAKd,KAAK4C,cACV9B,KAAK,SAAA+B,GAAQ,OAAIA,EAASC,+CAGtBD,GAET,GAAIA,EAASE,QAAU,KAAOF,EAASE,OAAS,IAC5C,OAAOF,EAEP,IAAIG,EAAQ,IAAIC,MAAMJ,EAASK,YAE/B,MADAF,EAAMH,SAAWA,EACXG,WCxBHG,sBA9DX,SAAAA,IAAa,IAAA5C,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAAmD,IACT5C,EAAAT,OAAAsD,EAAA,EAAAtD,CAAAE,KAAAF,OAAAuD,EAAA,EAAAvD,CAAAqD,GAAAG,KAAAtD,QACKuD,aAAehD,EAAKgD,aAAarD,KAAlBJ,OAAA0D,EAAA,EAAA1D,QAAA0D,EAAA,EAAA1D,CAAAS,KACpBA,EAAKkD,iBAAmBlD,EAAKkD,iBAAiBvD,KAAtBJ,OAAA0D,EAAA,EAAA1D,QAAA0D,EAAA,EAAA1D,CAAAS,KACxBA,EAAKmD,KAAO,IAAI9D,EAJPW,oFAONP,KAAK0D,KAAKhB,YACT1C,KAAK2D,MAAMC,QAAQC,QAAQ,sCAG/B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,QAAME,SAAUlE,KAAKyD,kBACjBK,EAAAC,EAAAC,cAAA,SACIC,UAAU,YACVE,YAAY,wBACZC,KAAK,WACLC,KAAK,OACLC,SAAUtE,KAAKuD,eAEnBO,EAAAC,EAAAC,cAAA,SACIC,UAAU,YACVE,YAAY,wBACZC,KAAK,WACLC,KAAK,WACLC,SAAUtE,KAAKuD,eAEnBO,EAAAC,EAAAC,cAAA,SACIC,UAAU,cACVM,MAAM,SACNF,KAAK,uDAQZzC,GAAE,IAAA4C,EAAAxE,KACf4B,EAAE6C,iBAEFzE,KAAK0D,KAAKvD,MAAMH,KAAK0E,MAAMrE,SAASL,KAAK0E,MAAMpE,UAC1CQ,KAAK,SAAAC,GACHyD,EAAKb,MAAMC,QAAQC,QAAQ,gBAE7Bc,MAAM,SAAA5C,GACH6C,MAAM7C,0CAILH,GACT5B,KAAK6E,SAAL/E,OAAAgF,EAAA,EAAAhF,CAAA,GAES8B,EAAEmD,OAAOX,KAAOxC,EAAEmD,OAAOR,eAzDtBS,uDCDL,SAASC,EAASC,GAC7B,IAAMxB,EAAO,IAAI9D,EAAY,yBAC7B,gBAAAuF,GACI,SAAAC,IAAc,IAAA7E,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAAoF,IACV7E,EAAAT,OAAAsD,EAAA,EAAAtD,CAAAE,KAAAF,OAAAuD,EAAA,EAAAvD,CAAAsF,GAAA9B,KAAAtD,QACK0E,MAAQ,CACTW,KAAM,MAHA9E,EADlB,OAAAT,OAAAwF,EAAA,EAAAxF,CAAAsF,EAAAD,GAAArF,OAAAyF,EAAA,EAAAzF,CAAAsF,EAAA,EAAAI,IAAA,oBAAAjB,MAAA,WAQQ,GAAKb,EAAKhB,WAIN,IACI,IAAM+C,EAAU/B,EAAKtD,aACrBJ,KAAK6E,SAAS,CACVQ,KAAMI,IAEVzE,QAAQC,IAAI,cAEhB,MAAMc,GACF2B,EAAKgC,SACL1F,KAAK2D,MAAMC,QAAQC,QAAQ,eAZ/B7D,KAAK2D,MAAMC,QAAQC,QAAQ,YATvC,CAAA2B,IAAA,SAAAjB,MAAA,WA2BQ,OAAIvE,KAAK0E,MAAMW,KAEPvB,EAAAC,EAAAC,cAACkB,EAAD,CAAetB,QAAS5D,KAAK2D,MAAMC,QAASyB,KAAMrF,KAAK0E,MAAMW,OAI1D,SAjCnBD,EAAA,CAAiCJ,iBCGjCW,ECcWC,mLAfX,IADA,IAAIC,EAAQ,GACHC,EAAI,EAAGA,EAAI9F,KAAK2D,MAAMoC,SAASC,OAAQF,IAC9CD,EAAMI,KAAKnC,EAAAC,EAAAC,cAAA,KAAGC,UAAWjE,KAAK2D,MAAMoC,SAASD,GAAGA,EAAGN,IAAKM,KACxDD,EAAMI,KAAK,IAAMjG,KAAK2D,MAAMoC,SAASD,GAAGI,GACpCJ,IAAM9F,KAAK2D,MAAMoC,SAASC,OAAS,GACrCH,EAAMI,KAAKnC,EAAAC,EAAAC,cAAA,YAGf,OAAOF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS4B,UAVfM,IAAMnB,mBC2BXoB,GCsNAnB,mLA9NX,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC7B3C,EAAAC,EAAAC,cAACqC,EAAA,KAAD,CAAMpC,UAAU,cACdH,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,EAAGE,GAAI,GACd1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oCAGjBH,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,EAAGE,GAAI,GACd1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,YACAH,EAAAC,EAAAC,cAACqC,EAAA,UAAD,CAAWK,IAAI,KAAf,aAKR5C,EAAAC,EAAAC,cAACqC,EAAA,WAAD,KACEvC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC2C,EAAD,KACG,CACC,CACEb,EAAG,kBACHI,EAAG,mBAOfpC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC7B3C,EAAAC,EAAAC,cAACqC,EAAA,KAAD,CAAMpC,UAAU,cACdH,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,EAAGE,GAAI,GACd1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0CAGjBH,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,EAAGE,GAAI,GACd1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,WACAH,EAAAC,EAAAC,cAACqC,EAAA,UAAD,CAAWK,IAAI,KAAf,eAKR5C,EAAAC,EAAAC,cAACqC,EAAA,WAAD,KACEvC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC2C,EAAD,KACG,CACC,CACEb,EAAG,kBACHI,EAAG,iBAOfpC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC7B3C,EAAAC,EAAAC,cAACqC,EAAA,KAAD,CAAMpC,UAAU,cACdH,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,EAAGE,GAAI,GACd1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oCAGjBH,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,EAAGE,GAAI,GACd1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,UACAH,EAAAC,EAAAC,cAACqC,EAAA,UAAD,CAAWK,IAAI,KAAf,UAKR5C,EAAAC,EAAAC,cAACqC,EAAA,WAAD,KACEvC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC2C,EAAD,KACG,CACC,CACEb,EAAG,eACHI,EAAG,yBAOfpC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC7B3C,EAAAC,EAAAC,cAACqC,EAAA,KAAD,CAAMpC,UAAU,cACdH,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,EAAGE,GAAI,GACd1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2CAGjBH,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,EAAGE,GAAI,GACd1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,aACAH,EAAAC,EAAAC,cAACqC,EAAA,UAAD,CAAWK,IAAI,KAAf,YAKR5C,EAAAC,EAAAC,cAACqC,EAAA,WAAD,KACEvC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC2C,EAAD,KACG,CACC,CACEb,EAAG,kBACHI,EAAG,oBAQjBpC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,IACPxC,EAAAC,EAAAC,cAACqC,EAAA,KAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,WAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,UAAD,uBACAvC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,yBAEFH,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACEvC,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACEzF,KAAM0F,mCAAiC1F,KACvCmB,QAASuE,mCAAiCvE,QAC1CwE,MAAO,IACPC,OAAQ,OAGZjD,EAAAC,EAAAC,cAACqC,EAAA,WAAD,KACEvC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC2C,EAAD,KACG,CACC,CACEb,EAAG,iBACHI,EAAG,gCAQjBpC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvB1C,EAAAC,EAAAC,cAACqC,EAAA,KAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,WAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,UAAD,yBACAvC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,8BAEFH,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACEvC,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACEzF,KAAM6F,gCAA8B7F,KACpCmB,QAAS0E,gCAA8B1E,WAG3CwB,EAAAC,EAAAC,cAACqC,EAAA,WAAD,KACEvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,8BADf,UACqD,IACnDH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,8BAFf,QAEmD,IACjDH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6BAHf,WAGqD,IACnDH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAJf,aAMAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC2C,EAAD,KACG,CACC,CACEb,EAAG,sBACHI,EAAG,+BAOfpC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvB1C,EAAAC,EAAAC,cAACqC,EAAA,KAAD,CAAMpC,UAAU,cACdH,EAAAC,EAAAC,cAACqC,EAAA,WAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,UAAD,qBACAvC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,2BAEFH,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACEvC,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACEzF,KAAM8F,uBAAqB9F,KAC3BmB,QAAS2E,uBAAqB3E,QAC9BwE,MAAO,IACPC,OAAQ,OAGZjD,EAAAC,EAAAC,cAACqC,EAAA,WAAD,KACEvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BADf,iBACyD,IACvDH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,8BAFf,iBAIAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC2C,EAAD,KACG,CACC,CACEb,EAAG,eACHI,EAAG,6CAnNDC,IAAMnB,6LDf1B,OACElB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,KAAGkD,KAAMlH,KAAK2D,MAAMwD,KAAOnH,KAAK2D,MAAMwD,KAAO,KAC3CrD,EAAAC,EAAAC,cAAA,OACEC,UAAU,qBACVmD,IAAKpH,KAAK2D,MAAM0D,OAChBC,IAAKtH,KAAK2D,MAAM4D,YAElBzD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASjE,KAAK2D,MAAM6D,QAEpC1D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAejE,KAAK2D,MAAM8D,qBAZtBtB,IAAMnB,YEOzB0C,cACJ,SAAAA,EAAY/D,GAAO,IAAApD,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAA0H,IACjBnH,EAAAT,OAAAsD,EAAA,EAAAtD,CAAAE,KAAAF,OAAAuD,EAAA,EAAAvD,CAAA4H,GAAApE,KAAAtD,KAAM2D,KACDe,MAAQ,CACXiD,OAAO,GAHQpH,wEAMV,IAAAiE,EAAAxE,KAAA4H,EAUH5H,KAAK2D,MARPkE,EAFKD,EAELC,MACAC,EAHKF,EAGLE,UACAC,EAJKH,EAILG,WACAC,EALKJ,EAKLI,eACAC,EANKL,EAMLK,WACAC,EAPKN,EAOLM,WACAC,EARKP,EAQLO,gBACAC,EATKR,EASLQ,qBAEEC,EAAU,IAMd,YALwBC,IAApBH,QACgCG,IAA9BH,EAAgBlE,YAClBoE,GAAWF,EAAgBlE,UAAY,UAGzBqE,IAAdR,QAA0CQ,IAAfP,EAE3BjE,EAAAC,EAAAC,cAACqC,EAAA,WAADvG,OAAAyI,OAAA,GACMJ,EADN,CAEElE,UAAWoE,GAAWrI,KAAK0E,MAAMiD,MAAQ,oBAAsB,WAEhDW,IAAdR,EACChE,EAAAC,EAAAC,cAACqC,EAAA,gBAAoB+B,EAClBN,GAGH,GAEFhE,EAAAC,EAAAC,cAACqC,EAAA,MAADvG,OAAAyI,OAAA,GACML,EADN,CAEEM,QAAS,SAAA5G,GAAC,OAAI4C,EAAKK,SAAS,CAAE8C,OAAO,KACrCc,OAAQ,SAAA7G,GAAC,OAAI4C,EAAKK,SAAS,CAAE8C,OAAO,aAEtBW,IAAfP,EACCjE,EAAAC,EAAAC,cAACqC,EAAA,gBAAoB+B,EAClBL,GAGH,IAImB,UAApBG,EAAW7D,MAAwC,aAApB6D,EAAW7D,KAC/CP,EAAAC,EAAAC,cAACqC,EAAA,UAADvG,OAAAyI,OAAA,GACMP,EADN,CAEE/D,UAA+B,UAApBiE,EAAW7D,KAAmB,mBAAqB,KAE9DP,EAAAC,EAAAC,cAACqC,EAAA,MAAU4B,EACTnE,EAAAC,EAAAC,cAACqC,EAAA,MAAU6B,GACXpE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBACf4D,GAAgB,KAIrB/D,EAAAC,EAAAC,cAACqC,EAAA,UAAc2B,EACZH,EAAQ/D,EAAAC,EAAAC,cAACqC,EAAA,MAAU4B,EAAaJ,GAAiB,GAClD/D,EAAAC,EAAAC,cAACqC,EAAA,MAAU6B,WAjEM/B,IAAMnB,WA0FhB0D,EAnBf,SAAAvD,GAAA,SAAAuD,IAAA,OAAA5I,OAAAC,EAAA,EAAAD,CAAAE,KAAA0I,GAAA5I,OAAAsD,EAAA,EAAAtD,CAAAE,KAAAF,OAAAuD,EAAA,EAAAvD,CAAA4I,GAAAC,MAAA3I,KAAA4I,YAAA,OAAA9I,OAAAwF,EAAA,EAAAxF,CAAA4I,EAAAvD,GAAArF,OAAAyF,EAAA,EAAAzF,CAAA4I,EAAA,EAAAlD,IAAA,SAAAjB,MAAA,WAGI,IADA,IAAIsE,EAAM,GACD/C,EAAI,EAAGA,EAAI9F,KAAK2D,MAAMmF,MAAM9C,OAAQF,IAC3C+C,EAAI5C,KACFnC,EAAAC,EAAAC,cAAA,OAAKwB,IAAKM,EAAG7B,UAAWjE,KAAK2D,MAAMmF,MAAMhD,IACvChC,EAAAC,EAAAC,cAAC+E,EAAe/I,KAAK2D,MAAMqF,YAAYlD,MAI7C,OAAOhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO4E,OAVjCH,EAAA,CAAgC1D,sCCbjBiE,mLA7DJ,IAAArB,EAaH5H,KAAK2D,MAXPuF,EAFKtB,EAELsB,OACAC,EAHKvB,EAGLuB,MACAC,EAJKxB,EAILwB,KACAC,EALKzB,EAKLyB,QACAC,EANK1B,EAML0B,UACAC,EAPK3B,EAOL2B,WACAC,EARK5B,EAQL4B,GACArC,EATKS,EASLT,KACAsC,EAVK7B,EAUL6B,IACAxF,EAXK2D,EAWL3D,UACGyF,EAZE5J,OAAA6J,EAAA,EAAA7J,CAAA8H,EAAA,4FAeHgC,EAAaC,IAAG,CAClBC,aAAcZ,EACda,YAAaZ,EACba,WAAYZ,EACZa,cAAeZ,EACfa,SAAUV,EACVW,WAAYhD,EACZiD,UAAWX,IAOb,YAJkBnB,IAAdrE,IACF2F,GAAc,IAAM3F,GAIpBH,EAAAC,EAAAC,cAACqC,EAAA,OAADvG,OAAAyI,OAAA,CAAQtE,UAAW2F,GAAgBF,GAChCJ,EACCxF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAWqF,IAAc,KAE5B,KACHtJ,KAAK2D,MAAMoC,SACXwD,EACCzF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,6BACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAWsF,IAAe,KAE7B,aA1CevE,uGCHrBqF,GC8RSpF,mLA3QX,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKG,GAAI,EAAGF,GAAI,IACdxC,EAAAC,EAAAC,cAACqC,EAAA,KAAD,CAAMpC,UAAU,aACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKoD,IAAKkD,IAAchD,IAAI,SAE9BxD,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACEvC,EAAAC,EAAAC,cAACuG,EAAD,CACElD,OAAQmD,IACRjD,UAAU,MACVC,MAAM,aACNC,YAAY,eAEd3D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAAb,+BAC8BH,EAAAC,EAAAC,cAAA,WAD9B,cAEaF,EAAAC,EAAAC,cAAA,WAFb,uBAKFF,EAAAC,EAAAC,cAACqC,EAAA,WAAD,KACEvC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGxC,UAAU,WACzCH,EAAAC,EAAAC,cAAA,eAEEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,wBAGJF,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CACEC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJxC,UAAU,mBAEVH,EAAAC,EAAAC,cAAA,gBAEEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,uBAGJF,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKI,GAAI,EAAGxC,UAAU,WACpBH,EAAAC,EAAAC,cAAA,kBAEEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,4BAOZF,EAAAC,EAAAC,cAACqC,EAAA,KAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,WAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,UAAD,CAAWK,IAAI,MAAf,iBAEF5C,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACEvC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BACZH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,EAAGE,GAAI,GACd1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OACEoD,IAAKqD,IACLnD,IAAI,iBACJrD,UAAU,+CAIhBH,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,EAAGE,GAAI,GAAhB,YAEE1C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACdH,EAAAC,EAAAC,cAAA,0BAGJF,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,EAAGE,GAAI,EAAGvC,UAAU,cAC3BH,EAAAC,EAAAC,cAAC0G,EAAD,CAAQC,KAAK,KAAKC,MAAM,UAAUzB,OAAK,EAACC,MAAI,EAACyB,SAAO,GAClD/G,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAKrBH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,EAAGE,GAAI,GACd1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OACEoD,IAAK0D,IACLxD,IAAI,cACJrD,UAAU,+CAIhBH,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,EAAGE,GAAI,GAAhB,eAEE1C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBACdH,EAAAC,EAAAC,cAAA,4BAGJF,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,EAAGE,GAAI,EAAGvC,UAAU,cAC3BH,EAAAC,EAAAC,cAAC0G,EAAD,CAAQC,KAAK,KAAKC,MAAM,UAAUzB,OAAK,EAACC,MAAI,EAACyB,SAAO,GAClD/G,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAKrBH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,EAAGE,GAAI,GACd1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OACEoD,IAAK2D,IACLzD,IAAI,iBACJrD,UAAU,+CAIhBH,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,EAAGE,GAAI,GAAhB,QAEE1C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eACdH,EAAAC,EAAAC,cAAA,uBAGJF,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,EAAGE,GAAI,EAAGvC,UAAU,cAC3BH,EAAAC,EAAAC,cAAC0G,EAAD,CAAQC,KAAK,KAAKC,MAAM,UAAUzB,OAAK,EAACC,MAAI,EAACyB,SAAO,GAClD/G,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAS7BH,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKG,GAAI,EAAGF,GAAI,IACdxC,EAAAC,EAAAC,cAACqC,EAAA,KAAD,CAAMpC,UAAU,aACdH,EAAAC,EAAAC,cAACqC,EAAA,WAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,UAAD,sBAEFvC,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACEvC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACgH,EAAD,CACElC,MAAO,CAAC,gBAAiB,gBAAiB,iBAC1CE,YAAa,CACX,CACEnB,MAAO,qBACPK,WAAY,CACV7D,KAAM,OACN4G,UAAU,EACVC,aAAc,uBAGlB,CACErD,MAAO,WACPK,WAAY,CACV7D,KAAM,OACN6G,aAAc,cAGlB,CACErD,MAAO,gBACPK,WAAY,CACV7D,KAAM,QACNF,YAAa,aAKrBL,EAAAC,EAAAC,cAACgH,EAAD,CACElC,MAAO,CAAC,gBAAiB,iBACzBE,YAAa,CACX,CACEnB,MAAO,aACPK,WAAY,CACV7D,KAAM,OACNF,YAAa,aACb+G,aAAc,SAGlB,CACErD,MAAO,YACPK,WAAY,CACV7D,KAAM,OACNF,YAAa,YACb+G,aAAc,aAKtBpH,EAAAC,EAAAC,cAACgH,EAAD,CACElC,MAAO,CAAC,aACRE,YAAa,CACX,CACEnB,MAAO,UACPK,WAAY,CACV7D,KAAM,OACNF,YAAa,eACb+G,aAAc,4BAKtBpH,EAAAC,EAAAC,cAACgH,EAAD,CACElC,MAAO,CAAC,gBAAiB,gBAAiB,iBAC1CE,YAAa,CACX,CACEnB,MAAO,OACPK,WAAY,CACV7D,KAAM,OACN6G,aAAc,YACd/G,YAAa,SAGjB,CACE0D,MAAO,UACPK,WAAY,CACV7D,KAAM,OACN6G,aAAc,YACd/G,YAAa,YAGjB,CACE0D,MAAO,cACPK,WAAY,CACV7D,KAAM,SACNF,YAAa,gBAKrBL,EAAAC,EAAAC,cAACgH,EAAD,CACElC,MAAO,CAAC,aACRE,YAAa,CACX,CACEnB,MAAO,WACPK,WAAY,CACV7D,KAAM,WACN6G,aACE,gEACF/G,YAAa,oCAKrBL,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAC0G,EAAD,CAAQE,MAAM,UAAUzB,OAAK,GAA7B,iCA9PHhD,IAAMnB,YDjBX,CAAC,KAAM,KAAM,WAAY,QAAS,WAAY,WEHvCmG,aACjB,SAAAA,IAAcrL,OAAAC,EAAA,EAAAD,CAAAE,KAAAmL,GACVnL,KAAKoL,QAAU,wBACfpL,KAAKC,MAAQD,KAAKC,MAAMC,KAAKF,2DAExBqL,EAAOlK,GACZ,OAAOnB,KAAKC,MAAMD,KAAKoL,QAAQC,EAAO,CAClC5K,OAAQ,OACRC,KAAMC,KAAKC,UAAUO,qCAIrBkK,GACJ,OAAOrL,KAAKC,MAAMD,KAAKoL,QAAQC,EAAO,CAClC5K,OAAQ,2CAKL4K,GACP,OAAOrL,KAAKC,MAAMD,KAAKoL,QAAQC,EAAO,CAClC5K,OAAQ,yJAKV4B,EAAKC,GAEP,IAAMC,EAAU,CACZC,OAAU,mBACVC,eAAgB,mBAChB6I,UAAWtL,KAAKwB,YAGpB,OAAOvB,MAAMoC,EAADvC,OAAA6C,EAAA,EAAA7C,CAAA,CACRyC,WACGD,IAEFxB,KAAKd,KAAK4C,cACV9B,KAAK,SAAA+B,GAAQ,OAAIA,EAASC,+CAGtBD,GAET,GAAIA,EAASE,QAAU,KAAOF,EAASE,OAAS,IAC5C,OAAOF,EAEP,IAAIG,EAAQ,IAAIC,MAAMJ,EAASK,YAE/B,MADAF,EAAMH,SAAWA,EACXG,qCAKV,OAAOf,aAAaE,QAAQ,gDCtC9Bf,EAAM,IAAI+J,EAoKDlG,iBAlKb,SAAAsG,EAAY5H,GAAO,IAAApD,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAAuL,IACjBhL,EAAAT,OAAAsD,EAAA,EAAAtD,CAAAE,KAAAF,OAAAuD,EAAA,EAAAvD,CAAAyL,GAAAjI,KAAAtD,KAAM2D,KACDe,MAAQ,CACX8G,OAAQ,KACRC,WAAY,GACZC,aAAa,GAEfnL,EAAKoL,aAAepL,EAAKoL,aAAazL,KAAlBJ,OAAA0D,EAAA,EAAA1D,QAAA0D,EAAA,EAAA1D,CAAAS,KACpBA,EAAKqL,OAASrL,EAAKqL,OAAO1L,KAAZJ,OAAA0D,EAAA,EAAA1D,QAAA0D,EAAA,EAAA1D,CAAAS,KACdA,EAAKsL,UAAYtL,EAAKsL,UAAU3L,KAAfJ,OAAA0D,EAAA,EAAA1D,QAAA0D,EAAA,EAAA1D,CAAAS,KATAA,mFAajBP,KAAK6L,8FAMK,IAAArH,EAAAxE,KACVoB,EAAI0K,QAAQ,eAAehL,KAAK,SAAAiL,GAC9B,IAAIC,EAAc,GACdD,EAAO5K,KAAK6E,OAAS,GACvB+F,EAAO5K,KAAK8K,IAAI,SAASzG,GACvB,IAAM0G,EAAO,CACX/K,KAAM,CACJqE,EAAI2G,GACJ3G,EAAI4G,WAAWC,GACf7G,EAAI4G,WAAWE,SACf9G,EAAI+G,MACJ/G,EAAI4G,WAAWI,SAAW,IAAMhH,EAAI4G,WAAWK,gBAC/CjH,EAAIkH,OAAS,SAAW,aAG5BV,EAAY/F,KAAKiG,KAEnB1H,EAAKK,SAAS,CACZ4G,WAAYO,EACZN,aAAa,KAGflH,EAAKK,SAAS,CACZ4G,WAAY,GACZC,aAAa,qDAOnB1L,KAAK6E,SAAS,CACZ4G,WAAY,GACZC,aAAa,yCAIJiB,EAAMnH,GAAK,IAAAoH,EAAA5M,KAClB6M,EAAUF,EAAKxL,KAAK,GACxBC,EAAI0L,WAAW,eAAiBD,GAAS/L,KAAK,SAAAiL,GACtB,OAAlBA,EAAOhJ,SACT/B,QAAQC,IAAI8K,EAAOhJ,QACnB6J,EAAKhB,OAAO,KAAM,6BAA+BiB,IAEnD,IAAIpB,EAAamB,EAAKlI,MAAM+G,kBACrBA,EAAWjG,GAClBoH,EAAK/H,SAAS,CACZ4G,WAAYA,0EAMXsB,EAAOC,GACZ,IACI1K,EACJA,EAAU,CACRyK,MAAOA,EACPE,QACEnJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WAAMgJ,IAGV3I,KATS,UAUT+E,KAAM,qBACN8D,YAAa,GAEflN,KAAKmN,KAAKC,kBAAkBA,kBAAkB9K,oCAEvC,IACH+K,EADGC,EAAAtN,KASL,OAPEA,KAAK0E,MAAMgH,cACb2B,EACEvJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mCAKFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACuJ,EAAAxJ,EAAD,CAAmByJ,IAAI,sBACvB1J,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,IACPxC,EAAAC,EAAAC,cAACqC,EAAA,KAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,WAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,UAAD,CAAWK,IAAI,MAAf,mBAEF5C,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,MAAD,CAAOoH,YAAU,GACf3J,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,UACGqG,EAAM4B,IAAI,SAACU,EAAMnH,GAChB,OAAIA,IAAQ6E,EAAMrE,OAAS,EAEvBlC,EAAAC,EAAAC,cAAA,MAAIwB,IAAKA,EAAKvB,UAAU,cACrB0I,GAGA7I,EAAAC,EAAAC,cAAA,MAAIwB,IAAKA,GAAMmH,OAI5B7I,EAAAC,EAAAC,cAAA,aACGhE,KAAK0E,MAAM+G,WAAWQ,IAAI,SAACU,EAAMnH,GAChC,OACE1B,EAAAC,EAAAC,cAAA,MAAIwB,IAAKA,GACNmH,EAAKxL,KAAK8K,IAAI,SAACU,EAAMnH,GACpB,OAAO1B,EAAAC,EAAAC,cAAA,MAAIwB,IAAKA,GAAMmH,KAExB7I,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAMC,GAAI,WAAahB,EAAKxL,KAAK,IAC/B2C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0CAGjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wCAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,KACEC,UAAU,kDACV2J,QAAS,kBAAMN,EAAK3B,aAAagB,EAAMnH,cAUxD6H,cAxJErI,cCfftB,ICwRSuB,cA1Qb,SAAA4I,EAAYlK,GAAO,IAAApD,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAA6N,IACjBtN,EAAAT,OAAAsD,EAAA,EAAAtD,CAAAE,KAAAF,OAAAuD,EAAA,EAAAvD,CAAA+N,GAAAvK,KAAAtD,KAAM2D,KACDe,MAAQ,CACXoJ,SAAS,GAEXvN,EAAKwN,UAAYxN,EAAKwN,UAAU7N,KAAfJ,OAAA0D,EAAA,EAAA1D,QAAA0D,EAAA,EAAA1D,CAAAS,KACjBA,EAAKqL,OAASrL,EAAKqL,OAAO1L,KAAZJ,OAAA0D,EAAA,EAAA1D,QAAA0D,EAAA,EAAA1D,CAAAS,KANGA,2GASZwM,GACL,IACI1I,EACJ,OAFY2J,KAAKC,MAAsB,EAAhBD,KAAKE,SAAe,IAGzC,KAAK,EACH7J,EAAO,UACP,MACF,KAAK,EACHA,EAAO,UACP,MACF,KAAK,EACHA,EAAO,SACP,MACF,KAAK,EACHA,EAAO,UACP,MACF,KAAK,EACHA,EAAO,OAKX,IAAI/B,EACJA,EAAU,CACRyK,MAAOA,EACPE,QACEnJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yBACaF,EAAAC,EAAAC,cAAA,kCADb,oDAMJK,KAAMA,EACN+E,KAAM,qBACN8D,YAAa,GAEflN,KAAKmN,KAAKC,kBAAkBA,kBAAkB9K,oCAEvC,IAAAkC,EAAAxE,KACP,OACE8D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACuJ,EAAAxJ,EAAD,CAAmByJ,IAAI,sBACvB1J,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKG,GAAI,IACP1C,EAAAC,EAAAC,cAACqC,EAAA,KAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,WAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,UAAD,sBACAvC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,gCAC+BH,EAAAC,EAAAC,cAAA,KAAGe,OAAO,SAASmC,KAAK,0CAAxB,8BAD/B,yBACoJpD,EAAAC,EAAAC,cAAA,KAAGkD,KAAK,kEAAkEnC,OAAO,UAAjF,yBAGtJjB,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKG,GAAI,EAAGF,GAAI,IACdxC,EAAAC,EAAAC,cAACqC,EAAA,KAAD,CAAMpC,UAAU,cACdH,EAAAC,EAAAC,cAACqC,EAAA,WAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,UAAD,6BAEFvC,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,MAAD,CAAOuE,MAAM,QACX9G,EAAAC,EAAAC,cAAA,6CAEFF,EAAAC,EAAAC,cAACqC,EAAA,MAAD,CACEuE,MAAM,OACNuD,OAAQnO,KAAK0E,MAAMoJ,QACnBM,OAAQpO,KAAK+N,WAEbjK,EAAAC,EAAAC,cAAA,0DAEFF,EAAAC,EAAAC,cAACqC,EAAA,MAAD,CACEuE,MAAM,OACN3G,UAAU,kBACVkK,OAAQnO,KAAK0E,MAAMoJ,QACnBM,OAAQpO,KAAK+N,WAEbjK,EAAAC,EAAAC,cAAA,QACEqK,cAAY,OACZpK,UAAU,uBAEZH,EAAAC,EAAAC,cAAA,QAAMqK,cAAY,WAAlB,uDAIFvK,EAAAC,EAAAC,cAACqC,EAAA,MAAD,CACEuE,MAAM,OACN3G,UAAU,kBACVkK,OAAQnO,KAAK0E,MAAMoJ,QACnBM,OAAQpO,KAAK+N,WAEbjK,EAAAC,EAAAC,cAAA,QACEqK,cAAY,OACZpK,UAAU,4BAEZH,EAAAC,EAAAC,cAAA,QAAMqK,cAAY,WAAlB,0OAURvK,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKG,GAAI,EAAGF,GAAI,IACdxC,EAAAC,EAAAC,cAACqC,EAAA,KAAD,CAAMpC,UAAU,cACdH,EAAAC,EAAAC,cAACqC,EAAA,WAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,UAAD,6BAEFvC,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,MAAD,CACEuE,MAAM,UACNuD,OAAQnO,KAAK0E,MAAMoJ,QACnBM,OAAQpO,KAAK+N,WAEbjK,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,wBADF,8DAKFF,EAAAC,EAAAC,cAACqC,EAAA,MAAD,CACEuE,MAAM,OACNuD,OAAQnO,KAAK0E,MAAMoJ,QACnBM,OAAQpO,KAAK+N,WAEbjK,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,qBADF,2DAKFF,EAAAC,EAAAC,cAACqC,EAAA,MAAD,CACEuE,MAAM,UACNuD,OAAQnO,KAAK0E,MAAMoJ,QACnBM,OAAQpO,KAAK+N,WAEbjK,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,wBADF,8DAKFF,EAAAC,EAAAC,cAACqC,EAAA,MAAD,CACEuE,MAAM,UACNuD,OAAQnO,KAAK0E,MAAMoJ,QACnBM,OAAQpO,KAAK+N,WAEbjK,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,wBADF,8DAKFF,EAAAC,EAAAC,cAACqC,EAAA,MAAD,CACEuE,MAAM,SACNuD,OAAQnO,KAAK0E,MAAMoJ,QACnBM,OAAQpO,KAAK+N,WAEbjK,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,uBADF,qEAalBF,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKG,GAAI,GAAIF,GAAI,IACfxC,EAAAC,EAAAC,cAACqC,EAAA,KAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACEvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKG,GAAI,EAAGvC,UAAU,+BACpBH,EAAAC,EAAAC,cAACqC,EAAA,UAAD,CAAWK,IAAI,MAAf,uBAEE5C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAb,kCAINH,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKI,GAAI,EAAGH,GAAI,GAAIrC,UAAU,mBAC5BH,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKG,GAAI,EAAGF,GAAI,IACdxC,EAAAC,EAAAC,cAAC0G,EAAD,CACEE,MAAM,UACN0D,OAAK,EACLV,QAAS,kBAAMpJ,EAAKoH,OAAO,QAH7B,aAQF9H,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKG,GAAI,EAAGF,GAAI,IACdxC,EAAAC,EAAAC,cAAC0G,EAAD,CACEE,MAAM,UACN0D,OAAK,EACLV,QAAS,kBAAMpJ,EAAKoH,OAAO,QAH7B,eAQF9H,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKG,GAAI,EAAGF,GAAI,IACdxC,EAAAC,EAAAC,cAAC0G,EAAD,CACEE,MAAM,UACN0D,OAAK,EACLV,QAAS,kBAAMpJ,EAAKoH,OAAO,QAH7B,iBAWR9H,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKI,GAAI,EAAGH,GAAI,GAAIrC,UAAU,mBAC5BH,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKG,GAAI,EAAGF,GAAI,IACdxC,EAAAC,EAAAC,cAAC0G,EAAD,CACEE,MAAM,UACN0D,OAAK,EACLV,QAAS,kBAAMpJ,EAAKoH,OAAO,QAH7B,gBAQF9H,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKG,GAAI,EAAGF,GAAI,IACdxC,EAAAC,EAAAC,cAAC0G,EAAD,CACEE,MAAM,UACN0D,OAAK,EACLV,QAAS,kBAAMpJ,EAAKoH,OAAO,QAH7B,kBAQF9H,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKG,GAAI,EAAGF,GAAI,IACdxC,EAAAC,EAAAC,cAAC0G,EAAD,CACEE,MAAM,UACN0D,OAAK,EACLV,QAAS,kBAAMpJ,EAAKoH,OAAO,QAH7B,iCAtPHzF,IAAMnB,YDbhB,IAAIpF,GEoCF2O,GAjCE,CAOf,CACEC,KAAM,UACNpK,KAAM,SACNgF,KAAM,iBACNqF,UAAWlD,IAcb,CACEiD,KAAM,UACNpK,KAAM,SACNgF,KAAM,wBACNqF,UFdWxJ,cAfb,SAAAyJ,EAAYC,GAAK,IAAApO,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAA0O,IACfnO,EAAAT,OAAAsD,EAAA,EAAAtD,CAAAE,KAAAF,OAAAuD,EAAA,EAAAvD,CAAA4O,GAAApL,KAAAtD,KAAM2O,KACDC,eAFUrO,8EAMfmD,GAAKgC,SACL1F,KAAK2D,MAAMC,QAAQC,QAAQ,2CAG5B,OAAO,YAXWsC,IAAMnB,aEgCzB,CAAE6J,UAAU,EAAML,KAAM,IAAKM,OAAQ,UAAW1K,KAAM,cCoKzC2K,eAlLb,SAAAA,EAAYpL,GAAO,IAAApD,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAA+O,IACjBxO,EAAAT,OAAAsD,EAAA,EAAAtD,CAAAE,KAAAF,OAAAuD,EAAA,EAAAvD,CAAAiP,GAAAzL,KAAAtD,KAAM2D,KACDe,MAAQ,CACXyJ,QAAQ,EACRa,cAAc,EACdpE,MAAO,eAETrK,EAAK6N,OAAS7N,EAAK6N,OAAOlO,KAAZJ,OAAA0D,EAAA,EAAA1D,QAAA0D,EAAA,EAAA1D,CAAAS,KACdA,EAAK0O,eAAiB1O,EAAK0O,eAAe/O,KAApBJ,OAAA0D,EAAA,EAAA1D,QAAA0D,EAAA,EAAA1D,CAAAS,KARLA,wEAWbP,KAAK0E,MAAMyJ,OACbnO,KAAK6E,SAAS,CACZ+F,MAAO,gBAGT5K,KAAK6E,SAAS,CACZ+F,MAAO,SAGX5K,KAAK6E,SAAS,CACZsJ,QAASnO,KAAK0E,MAAMyJ,gDAGTvM,GACb5B,KAAK6E,SAAS,CACZmK,cAAehP,KAAK0E,MAAMsK,kDAGnB,IACL5K,EADKI,EAAAxE,KAuBT,OArBAkP,GAAgBjD,IAAI,SAACU,EAAMnH,GAmBzB,OAlBImH,EAAKwC,SACPxC,EAAKyC,MAAMnD,IAAI,SAACU,EAAMnH,GAIpB,OAHImH,EAAK6B,OAAShK,EAAKb,MAAM0L,SAASC,WACpClL,EAAOuI,EAAKvI,MAEP,QAGLuI,EAAKkC,SACHlC,EAAK6B,OAAShK,EAAKb,MAAM0L,SAASC,WACpClL,EAAOuI,EAAKvI,OAQX,OAEFA,wCAGPmL,SAASC,gBAAgBC,UAAUrB,OAAO,YAC1CpO,KAAKmN,KAAKuC,cAAcD,UAAUrB,OAAO,iDAIrCuB,OAAOC,WAAa,KAAO5P,KAAK0E,MAAMyJ,OACxCnO,KAAK6E,SAAS,CACZ+F,MAAO,SAGT5K,KAAK6E,SAAS,CACZ+F,MAAO,4DAKX+E,OAAOE,iBAAiB,SAAU7P,KAAK8P,YAAY5P,KAAKF,kDAEvC4B,GAEf+N,OAAOC,WAAa,KACpBhO,EAAEgC,QAAQyL,SAASC,WAAa1N,EAAEyN,SAASC,WACiB,IAA5DC,SAASC,gBAAgBvL,UAAU8L,QAAQ,cAE3CR,SAASC,gBAAgBC,UAAUrB,OAAO,YAC1CpO,KAAKmN,KAAKuC,cAAcD,UAAUrB,OAAO,6CAGpC,IAAAxB,EAAA5M,KACP,OAEE8D,EAAAC,EAAAC,cAACqC,EAAA,OAAD,CACEuE,OACgE,IAA9D5K,KAAK2D,MAAM0L,SAASC,SAASS,QAAQ,oBACjC,OACA/P,KAAK0E,MAAMkG,MAEjBoF,OAAO,KACP/L,WACgE,IAA9DjE,KAAK2D,MAAM0L,SAASC,SAASS,QAAQ,oBACjC,4BACA,8BACsB,gBAArB/P,KAAK0E,MAAMkG,MAA0B,sBAAwB,KAGpE9G,EAAAC,EAAAC,cAACqC,EAAA,UAAD,CAAW4J,OAAK,GACdnM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,UACEK,KAAK,SACLmJ,IAAI,gBACJvJ,UAAU,iBACV2J,QAAS,kBAAMhB,EAAKsD,gBAEpBpM,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4BAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4BAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,8BAGpBH,EAAAC,EAAAC,cAACqC,EAAA,YAAD,CAAaa,KAAK,KAAKlH,KAAKmQ,aAE9BrM,EAAAC,EAAAC,cAACqC,EAAA,cAAD,CAAeuH,QAAS5N,KAAKoO,QAC3BtK,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oCAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oCAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qCAElBH,EAAAC,EAAAC,cAACqC,EAAA,SAAD,CACE8H,OAAQnO,KAAK0E,MAAMyJ,OACnBiC,QAAM,EACNnM,UAAU,uBAEVH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACqC,EAAA,WAAD,CAAYpC,UAAU,aACpBH,EAAAC,EAAAC,cAACqC,EAAA,MAAD,CAAOlC,YAAY,cACnBL,EAAAC,EAAAC,cAACqC,EAAA,gBAAD,CAAiBgK,UAAU,UACzBvM,EAAAC,EAAAC,cAACqC,EAAA,eAAD,KACEvC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,8BAKrBH,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAK+J,QAAM,GACTtM,EAAAC,EAAAC,cAACqC,EAAA,QAAD,KACEvC,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAMC,GAAG,SAAS1J,UAAU,wBAC1BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,YAINH,EAAAC,EAAAC,cAACqC,EAAA,SAAD,CACEiK,KAAG,EACHnC,OAAQnO,KAAK0E,MAAMsK,aACnBZ,OAAQ,SAAAxM,GAAC,OAAIgL,EAAKqC,eAAerN,KAEjCkC,EAAAC,EAAAC,cAACqC,EAAA,eAAD,CAAgBkK,OAAK,EAACD,KAAG,GACvBxM,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,kBAGJH,EAAAC,EAAAC,cAACqC,EAAA,aAAD,CAAcmK,OAAK,GACjB1M,EAAAC,EAAAC,cAACqC,EAAA,aAAD,CAAcK,IAAI,KAAlB,UACA5C,EAAAC,EAAAC,cAACqC,EAAA,aAAD,CAAcK,IAAI,KAAlB,kBACA5C,EAAAC,EAAAC,cAACqC,EAAA,aAAD,CAAcK,IAAI,KAAlB,yBAGJ5C,EAAAC,EAAAC,cAACqC,EAAA,QAAD,KACEvC,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAMC,GAAG,SAAS1J,UAAU,uBAC1BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,yBAvKCkC,IAAMnB,WCUZyL,oLAxBX,OACE3M,EAAAC,EAAAC,cAAA,UACEC,UAAW,UAAYjE,KAAK2D,MAAM+M,QAAU,kBAAoB,KAEhE5M,EAAAC,EAAAC,cAACqC,EAAA,UAAD,CAAW4J,QAAOjQ,KAAK2D,MAAMsM,OAC3BnM,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KAEEvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,QACU,MAAO,IAAIpC,MAAO8O,UAD5B,eACkD7M,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAD/D,2BAVOkC,IAAMnB,0CdgFZ4L,eA3Eb,SAAAA,EAAYjN,GAAO,IAAApD,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAA4Q,IACjBrQ,EAAAT,OAAAsD,EAAA,EAAAtD,CAAAE,KAAAF,OAAAuD,EAAA,EAAAvD,CAAA8Q,GAAAtN,KAAAtD,KAAM2D,KACDkN,YAAY3Q,KAAjBJ,OAAA0D,EAAA,EAAA1D,QAAA0D,EAAA,EAAA1D,CAAAS,KAFiBA,2EAKPuQ,GACV,OAAO9Q,KAAK2D,MAAM0L,SAASC,SAASS,QAAQe,IAAc,EAAI,SAAW,+CAGrEC,UAAUvE,SAASuD,QAAQ,QAAU,IACvCpK,EAAK,IAAIqL,IAAiBhR,KAAKmN,KAAK8D,QAAS,CAC3CC,iBAAiB,EACjBC,iBAAiB,oDAKjBJ,UAAUvE,SAASuD,QAAQ,QAAU,GACvCpK,EAAGyL,2CAGE,IAAA5M,EAAAxE,KACP,OACE8D,EAAAC,EAAAC,cAAA,OACEC,UAAU,UACVoN,aAAYrR,KAAK2D,MAAM2N,QACvBC,oBAAmBvR,KAAK2D,MAAM6N,aAE9B1N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,KACEkD,KAAK,kCACLjD,UAAU,yBAEVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKoD,IAAKqK,KAAMnK,IAAI,iBAGxBxD,EAAAC,EAAAC,cAAA,KACEkD,KAAK,kCACLjD,UAAU,2BAFZ,uBAMFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBuJ,IAAI,WACnC1J,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACGrG,KAAK2D,MAAM+N,OAAOzF,IAAI,SAACU,EAAMnH,GAC5B,OAAImH,EAAKkC,SAAiB,KAExB/K,EAAAC,EAAAC,cAAA,MACEC,UACEO,EAAKqM,YAAYlE,EAAK6B,OACrB7B,EAAKgF,IAAM,cAAgB,IAE9BnM,IAAKA,GAEL1B,EAAAC,EAAAC,cAAC4N,GAAA,EAAD,CACEjE,GAAIhB,EAAK6B,KACTvK,UAAU,WACV4N,gBAAgB,UAEhB/N,EAAAC,EAAAC,cAAA,KAAGC,UAAW0I,EAAKvD,OACnBtF,EAAAC,EAAAC,cAAA,SAAI2I,EAAKvI,oBA9DP+B,IAAMnB,kDeiGb8M,uBAtGb,SAAAA,EAAYnO,GAAO,IAAApD,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAA8R,IACjBvR,EAAAT,OAAAsD,EAAA,EAAAtD,CAAAE,KAAAF,OAAAuD,EAAA,EAAAvD,CAAAgS,GAAAxO,KAAAtD,KAAM2D,KACDoO,OAAS5L,IAAM6L,YAFHzR,mFAMjB,IAAI0R,EAAkB1C,SAAS2C,eAAe,gBAAgBC,aAC1DC,EAAiB7C,SAAS2C,eAAe,gBAAgBG,YAC7DrS,KAAKsS,YAAYL,EAAiBG,GAAgB,gDAGlD,IAAIH,EAAkB1C,SAAS2C,eAAe,gBAAgBC,aAC1DC,EAAiB7C,SAAS2C,eAAe,gBAAgBG,YAC7DrS,KAAKsS,YAAYL,EAAiBG,uCAGxBrL,EAAQD,GAAuB,IAAhByL,IAAgB3J,UAAA5C,OAAA,QAAAsC,IAAAM,UAAA,KAAAA,UAAA,GACrCzH,EAAOnB,KAAK2D,MAAMxC,KAEtBH,QAAQC,IAAIE,GAEZH,QAAQC,IAAIjB,KAAK2D,MAAMxC,MACnBoR,EAqDJ,SAAgBpR,GACd,IAAI2E,EAAI,EACJ0M,EAAOxE,KAAKC,MAAM9M,EAAO,GAChB,IAATqR,GAAuB,IAATrR,IAAYqR,EAAO,GAErC,KAAO1M,EAAI0M,EAAM1M,IACf2M,KAAU,qBAAuB3M,EAAI,IAAI4M,MAAM,OAAQ,WAGzD,KAAO5M,EAAI,GAAIA,IACb2M,KAAU,qBAAuB3M,EAAI,IAAI4M,MAAM,OAAQ,WA9DzDC,CAAOxR,GAMT,SAAkBA,EAAMgL,GACtB,IAAMyG,EAAS,CAAEC,IAAK,GAAIrC,MAAO,EAAGsC,OAAQ,GAAIC,KAAM,IACtDhM,EAASA,EAAS6L,EAAOC,IAAMD,EAAOE,OACtChM,EAAQA,EAAO8L,EAAOG,KAAOH,EAAOpC,MAUpC,IARA,IAAIwC,EAAMP,KACAtG,GACP8G,OAAO,OACPC,KAAK,QAASpM,EAAQ8L,EAAOpC,MAAQoC,EAAOG,MAC5CG,KAAK,SAAUnM,EAAS6L,EAAOC,IAAMD,EAAOE,QAC5CG,OAAO,KACPC,KAAK,YAAa,aAAeN,EAAOG,KAAO,IAAMH,EAAOC,IAAM,KAE5D/M,EAAI,EAAGA,EAAI,GAAIA,IACtBkN,EACGC,OAAO,QACPC,KAAK,SAAUpM,EAAQ,IAAM,IAC7BoM,KAAK,SAAmB,IAATnM,GACfmM,KAAK,KAAM,oBAAsBpN,EAAI,IACrCoN,KAAK,YAAa,aAAgBpN,GAAKgB,EAAQ,GAAM,GAAK,OAG/D,IAAIhB,EAAI,EACJ0M,EAAOxE,KAAKC,MAAM9M,EAAO,GAChB,IAATqR,GAAuB,IAATrR,IAAYqR,EAAO,GAErC,KAAO1M,EAAI,GAAIA,IACbkN,EAAIG,OAAO,qBAAuBrN,EAAI,IAAI4M,MAAM,OAAQ,WAI1D,IADA,IAAIU,EAAI,EACDA,EAAIZ,EAAMY,IACfpS,QAAQC,IAAI,kBACZ+R,EAAIG,OAAO,qBAAuBC,EAAI,IAAIV,MAAM,OAAQ,QAG1DM,EAAIK,UAAU,kBAAkBC,SAvClCC,CAASpS,EAAM,wDAkEf,OACE2C,EAAAC,EAAAC,cAAA,OACEmI,GAAI,qBACJ3G,IAAKxF,KAAK+R,OACVW,MAAO,CAAE3L,OAAQ,kBAjGF/B,0CCiDRwO,eA9Cb,SAAAA,EAAY7P,GAAO,IAAApD,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAAwT,IACjBjT,EAAAT,OAAAsD,EAAA,EAAAtD,CAAAE,KAAAF,OAAAuD,EAAA,EAAAvD,CAAA0T,GAAAlQ,KAAAtD,KAAM2D,KACDe,MAAQ,GACbnE,EAAKkT,MAAQtN,IAAM6L,YACnBzR,EAAKmT,UAAYnT,EAAKmT,UAAUxT,KAAfJ,OAAA0D,EAAA,EAAA1D,QAAA0D,EAAA,EAAA1D,CAAAS,KACjBA,EAAKoT,gBAAkBpT,EAAKoT,gBAAgBzT,KAArBJ,OAAA0D,EAAA,EAAA1D,QAAA0D,EAAA,EAAA1D,CAAAS,KALNA,yEAUTY,GACRH,QAAQC,WAAWE,GACnBH,QAAQC,IAAIE,GACZnB,KAAK2D,MAAMiQ,SAASzS,2CAGN0S,GACd7S,QAAQC,IAAI,aAAc4S,GAC1B7T,KAAK8T,MAAMC,MAAMF,+CAIjBG,YAAMC,WAAWC,IACjBlU,KAAK8T,MAAQ,IAAIE,YAAMhU,KAAK2D,MAAMrB,SAClCtC,KAAK8T,MAAMK,KAAKnU,KAAKyT,MAAMW,SAC3BpU,KAAK8T,MAAMI,MAEXlU,KAAK8T,MAAMC,MAAM,2CACjB/T,KAAK8T,MAAMO,GAAG,OAAQrU,KAAK0T,4CAI3B,OAAO5P,EAAAC,EAAAC,cAAA,OAAKwJ,IAAKxN,KAAKyT,MAAOf,MAAO,CAClC4B,SAAU,SACVC,SAAU,WACVzN,MAAO,OACPC,OAAQ,QAEVzE,QAAS,CACPkS,KAAM,GACNC,KAAM,GACNC,aAAa,YA1CI1P,6DCHF2P,eACnB,SAAAA,EAAYhR,GAAO,IAAApD,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAA2U,IACjBpU,EAAAT,OAAAsD,EAAA,EAAAtD,CAAAE,KAAAF,OAAAuD,EAAA,EAAAvD,CAAA6U,GAAArR,KAAAtD,KAAM2D,KACDiR,IAAM,KACXrU,EAAKuL,QAAUvL,EAAKuL,QAAQ5L,KAAbJ,OAAA0D,EAAA,EAAA1D,QAAA0D,EAAA,EAAA1D,CAAAS,KAHEA,mFASjB,IAAI0R,EAAkB1C,SAAS2C,eAAe,gBAAgBC,aAC1DC,EAAiB7C,SAAS2C,eAAe,gBAAgBG,YAC7DrS,KAAK6U,WAAW5C,EAAiBG,GAAgB,gDAGjD,IAAIH,EAAkB1C,SAAS2C,eAAe,gBAAgBC,aAC1DC,EAAiB7C,SAAS2C,eAAe,gBAAgBG,YACzDzQ,EAAI2N,SAAS2C,eAAelS,KAAK2D,MAAMM,WACxCrC,EAAEkT,aACHlT,EAAEmT,YAAYnT,EAAEkT,YAChB9U,KAAK6U,WAAW5C,EAAiBG,sCAKnC,OAAQpS,KAAK2D,MAAMqR,0CAGVC,EAAQC,EAAO3C,GACxB,IAAIpR,EAAOnB,KAAK8L,UAChB9K,QAAQC,IAAI,gBAAgBE,GAE5B,IAAIgU,EAAW,CAAC,OAAQ,QACpBC,EAAY,CAAE,UAAY,WAmJ9B,OAAY,GAAT7C,OACHvS,KAAK4U,IAAM,IAjJX,SAAkBzT,EAAMgL,GACtB,IAAIyG,EAAe,GAAfA,EAA0B,EAA1BA,EAAqC,GAArCA,EAA+C,EAC/C9L,EAAQoO,EAAStC,EAAcA,EAC/B7L,EAASkO,EAAUrC,EAAaA,EAEhCyC,EAASrH,KAAKsH,IAAIxO,EAAOC,GAAU,EACnCwO,EAAuB,IAATF,EACdG,EAAuB,IAATH,EAEdI,EAAiBJ,EAAO,EACxBK,EAAiBL,EAAO,IAAK,GAE7BzK,EAAQ+K,OAEP9V,OAAOsV,GACPS,MAAMR,GAEPS,EAAgBpD,KAAU,OAE1BqD,EAAMrD,OAELlO,MAAM,SAASwR,GAAI,OAAOA,EAAExR,QAC5ByR,KAAK,MAENC,EAAMxD,OAEL8C,YAAYA,GACZC,YAAYA,GAEbU,GAAQpP,EAAM8L,EAAaA,GAAe,EAC1CuD,GAAe,EAAPd,EAAsB,EAAXzC,GAAgB,EAEnCI,EAAMP,KAAUtG,GAAI8G,OAAO,OAC1BC,KAAK,QAASpM,EAAM8L,EAAaA,GACjCM,KAAK,SAAUnM,EAAO6L,EAAWA,GACjCK,OAAO,KACPC,KAAK,YAAa,aAAegD,EAAO,IAAMC,EAAO,KAEtD3H,EAAOwE,EAAIoD,MAAMjV,GAAMkS,UAAU,aAChClS,KAAK2U,GACLO,QACApD,OAAO,QACPC,KAAK,OAAQ,SAAS6C,GACrB,OAAOnL,EAAMmL,EAAE5U,KAAKmV,SAErBpD,KAAK,QAAS,YACdA,KAAK,SAAU,QACfA,KAAK,IAAK+C,GACVM,KAAK,SAASR,GACb/V,KAAKwW,SAAST,IAEf1B,GAAG,YAAa,SAAS0B,GAGxBtD,KAAUzS,MAAMyW,aAAaC,SAAS,KAAKxD,KAAK,IAAK+C,EAAIV,YAAYA,GAAaC,YAAYA,EAAc,IAAO,KAInH,IADA,IAAImB,EAAQ,EACH7Q,EAAI,EAAGA,EAAIqP,EAASnP,OAAQF,IACnC6Q,GAASxV,EAAK2E,GAAL,MAGXkN,EAAIC,OAAO,YACNC,KAAK,QAAS,mBACdA,KAAK,KAAM,SACXA,KAAK,cAAe,UACpBuD,aAAaC,SAAS,KACtBE,KAAKb,EAAC,KAAD,OAEV/C,EAAIC,OAAO,YACNC,KAAK,QAAS,mBACdA,KAAK,KAAM,QACXA,KAAK,cAAe,UACpBuD,aAAaC,SAAS,KACtBE,KAAKf,EAAcE,EAAC,MAAYY,MAGtCtC,GAAG,WAAY,SAAS0B,GACvBtD,KAAUzS,MAAMyW,aAAaC,SAAS,KAAKxD,KAAK,IAAK+C,EAAIV,YAAYA,GAAaC,YAAYA,IAE9F/C,KAAa,oBAAoBa,WAInCuD,EAAS7D,EAAIK,UAAU,WACtBlS,KAAKyJ,EAAM/K,UACXwW,QACApD,OAAO,KACPC,KAAK,KAAM,SAAS6C,GACnB,MAAO,UAAYA,IAEpB7C,KAAK,QAAS,UACdA,KAAK,YAAa,SAAS6C,EAAGjQ,GAG7B,MAAO,cAFKA,EAAE,IAAI4P,EAAcD,GAEH,KADjBJ,EAASzC,EAAgB,GACK,MAGhDiE,EAAO5D,OAAO,QACTC,KAAK,QAASuC,GACdvC,KAAK,SAAUuC,GACf/C,MAAM,OAAQ9H,GACd8H,MAAM,SAAU9H,GAErBiM,EAAO5D,OAAO,QACT9R,KAAKA,GACL+R,KAAK,IAAKuC,GACVvC,KAAK,IAAKuC,EAAe,KACzBmB,KAAK,SAASb,GAEb,OAAOA,EAAEO,MAAM,IAAItI,KAAK7E,MAAM4M,EAAExR,MAAF,SAAqB,QAEzDvE,KAAK8W,QAAU,WACb,OAAOtI,GAGTxO,KAAK+W,OAAS,WACZ,OAAOtE,OAAS8C,YAAYA,GAAaC,YAAYA,IA4B9C,CAAarU,EAAM,IAAInB,KAAK2D,MAAMM,iBAvB7C,SAAgB9C,EAAMqN,EAAMyH,GAE1B,IAQIe,EAAQvE,OAEPlO,MAAM,SAASwR,GAAI,OAAOA,EAAExR,QAC5ByR,KAAK,MAEVgB,EAAMzS,MAAM,SAASwR,GAAK,OAAOA,EAAC,SAClCvH,EAAOA,EAAK4H,MAAMjV,GAAMA,KAAK6V,GAAO9D,KAAK,IAAK+C,IACzCQ,aAAaC,SAAS,KAAKO,UAAU,IAf3B,SAAkBlT,GAC/B,IAAI+B,EAAI2M,KAAezS,KAAKwW,SAAUzS,GAEtC,OADA/D,KAAKwW,SAAW1Q,EAAE,GACX,SAASI,GACd,OAAO+P,EAAInQ,EAAEI,OA4BnByM,CAAOxR,EAAMnB,KAAK4U,IAAIkC,UAAW9W,KAAK4U,IAAImC,2CAS1C,OAAOjT,EAAAC,EAAAC,cAAA,OAAKmI,GAAInM,KAAK2D,MAAMM,UAAWyO,MAAO,CAAE3L,OAAQ,kBAzMrB/B,sBCyC/B,SAASkS,GAAUC,EAAQC,EAAQC,EAASC,GACjD,IAOIC,EAPAC,EAAY,IAAIC,YAAY,CAACL,IAC7BM,EAAW,IAAIC,WAAW,CAC5BH,EAAU,GACVA,EAAU,GACVH,EACAC,IAGF,GAAI,gBAAiB3H,OAAQ,CAC3B,IAAI7M,EAAOnC,KAAKC,UAAUuW,GAE1BI,GADc,IAAIK,aACGC,OAAO/U,QAE5B9B,QAAQC,IAAI,eAId,OAFe,IAAI0W,WAAJ,GAAAnX,OAAAV,OAAAgY,GAAA,EAAAhY,CAAmByX,GAAnBzX,OAAAgY,GAAA,EAAAhY,CAAkC4X,KAEjCK,OCnDlB,ICAIpS,GDAAqS,GAAS,CAAC,MAAO,OAAQ,MAAO,MAAO,SAAU,WAEhCC,eACnB,SAAAA,EAAYtU,GAAO,IAAApD,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAAiY,IACjB1X,EAAAT,OAAAsD,EAAA,EAAAtD,CAAAE,KAAAF,OAAAuD,EAAA,EAAAvD,CAAAmY,GAAA3U,KAAAtD,KAAM2D,KAORuU,qBAAuB,kBACrB3X,EAAKmE,MAAMyT,SAASC,OAAO,SAAAC,GACzB,OAAyB,GAArBA,EAAO,QAAqC,GAAlBA,EAAO,OAVtB9X,EAcnB+X,eAAiB,SAAAnX,GACfH,QAAQC,IAAIE,GACZZ,EAAKgY,YAAa,EAClBhY,EAAKsE,SAAS,CACZsT,SAAUhX,EAAKqX,aAhBjBjY,EAAKsE,SAAS,CACZsT,SAAU,KAEZ5X,EAAKgY,YAAa,EALDhY,wEAuBjB,OACEP,KAAKuY,YACHzU,EAAAC,EAAAC,cAACqC,EAAA,MAAD,CAAOoH,YAAU,GACf3J,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,UACGgU,GAAO/L,IAAI,SAACzE,EAAOhC,GAClB,OAAIA,IAAQwS,GAAOhS,OAAS,EAExBlC,EAAAC,EAAAC,cAAA,MAAIwB,IAAKA,EAAKvB,UAAU,cACrBuD,GAGA1D,EAAAC,EAAAC,cAAA,MAAIwB,IAAKA,GAAMgC,OAI5B1D,EAAAC,EAAAC,cAAA,aACGhE,KAAKkY,uBAAuBjM,IAAI,SAACwM,EAAMjT,GACtC,OACE1B,EAAAC,EAAAC,cAAA,MAAIwB,IAAKA,GACNwS,GAAO/L,IAAI,SAACzE,EAAOhC,GAClB,OAAIA,IAAQwS,GAAOhS,OAAS,EAExBlC,EAAAC,EAAAC,cAAA,MAAIwB,IAAKA,EAAKvB,UAAU,cACrBwU,EAAKjR,IAGL1D,EAAAC,EAAAC,cAAA,MAAIwB,IAAKA,GAAMiT,EAAKjR,kBAnDNxC,aEsBnC5D,GAAM,IAAI+J,EAoYDuN,eAjYb,SAAAA,EAAY/U,GAAO,IAAApD,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAA0Y,IACjBnY,EAAAT,OAAAsD,EAAA,EAAAtD,CAAAE,KAAAF,OAAAuD,EAAA,EAAAvD,CAAA4Y,GAAApV,KAAAtD,KAAM2D,KACDgV,QAAUpY,EAAKoD,MAAMiV,MAAMC,OAAOC,QACvCvY,EAAKmE,MAAQ,CACXqU,UAAW,GACX3M,WAAY,GACZ4M,iBAAkB,GAClBC,aAAc,EACdC,aAAc,GACdC,SAAU,CAAC,CAAE7C,MAAO,OAAQ/R,MAAO,IAAM,CAAE+R,MAAO,OAAQ/R,MAAO,KACjE6U,SAAU,GACVC,eAAgB,EAChBC,SAAU,IAEZ/Y,EAAKgZ,aAAehZ,EAAKgZ,aAAarZ,KAAlBJ,OAAA0D,EAAA,EAAA1D,QAAA0D,EAAA,EAAA1D,CAAAS,KACpBA,EAAKiZ,kBAAoBjZ,EAAKiZ,kBAAkBtZ,KAAvBJ,OAAA0D,EAAA,EAAA1D,QAAA0D,EAAA,EAAA1D,CAAAS,KACzBA,EAAKkZ,aAAelZ,EAAKkZ,aAAavZ,KAAlBJ,OAAA0D,EAAA,EAAA1D,QAAA0D,EAAA,EAAA1D,CAAAS,KACpBA,EAAKmZ,gBAAkBnZ,EAAKmZ,gBAAgBxZ,KAArBJ,OAAA0D,EAAA,EAAA1D,QAAA0D,EAAA,EAAA1D,CAAAS,KACvBA,EAAKoZ,kBAAoBpZ,EAAKoZ,kBAAkBzZ,KAAvBJ,OAAA0D,EAAA,EAAA1D,QAAA0D,EAAA,EAAA1D,CAAAS,KACzBA,EAAKqZ,cAAgBrZ,EAAKqZ,cAAc1Z,KAAnBJ,OAAA0D,EAAA,EAAA1D,QAAA0D,EAAA,EAAA1D,CAAAS,KACrBA,EAAKsZ,YAAc1T,IAAM6L,YACzBzR,EAAKuZ,aAAe3T,IAAM6L,YAC1BzR,EAAKwZ,eAAiB5T,IAAM6L,YAC5BzR,EAAKyZ,UAAY,GACjBzZ,EAAK0Z,KAAO,GAxBK1Z,mFA4BjBP,KAAKuZ,sDAGQ,IAAA/U,EAAAxE,KACboB,GAAI0K,QAAQ,eAAiB9L,KAAK2Y,SAAS7X,KAAK,SAAAiL,GAC9C,IAAMK,EAAaL,EAAO5K,KAAP,kBACZ4K,EAAO5K,KAAP,WACPqD,EAAKK,SAAS,CACZkU,UAAWhN,EAAO5K,KAClBiL,WAAYA,gDAKA8N,GAAO,IAAAtN,EAAA5M,KACvBgB,QAAQC,IAAIiZ,GACZ,IAAIC,EAAW,IAAIC,WACnBD,EAASE,kBAAkBH,GAC3BC,EAAStK,iBAAiB,UAAW,SAAAjO,GAAK,IAAA0Y,EH5EvC,SAAqBC,GAE1B,IAQI1X,EARA2X,EAASD,EAAOE,WAAa,EAC7BC,EAAYH,EAAOI,MAAMH,EAAQD,EAAOE,YACxCG,EAAiB,IAAIC,SAASH,EAAW,GACzCtD,EAASwD,EAAeE,UAAU,GAClCzD,EAAUuD,EAAeG,SAAS,GAClCC,EAAOJ,EAAeG,SAAS,GAI/BE,EAAWV,EAAOI,MAAM,EAAGH,GAC3BU,EAAe,IAAIL,SAASI,GAEhC,GAAI,gBAAiBtL,OAAQ,CAC3B,IACIwL,EADU,IAAIC,YAAY,SACTzZ,OAAOuZ,GAC5Bla,QAAQC,IAAI,UAAWka,GACvBtY,EAAWlC,KAAK0a,MAAMF,OACjB,CACLna,QAAQC,IAAI,eACZ,IAAIqa,EAAgBC,OAAOC,aAAa7S,MACtC,KACA,IAAIgP,WAAWsD,IAEjBpY,EAAWlC,KAAK0a,MAAMC,GAQxB,MAAO,CANM,CACXlE,OAAQA,EACR4D,KAAMA,EACN3D,QAASA,GAGKxU,GG4CO4Y,CAAY7Z,EAAE8Z,WAAW3P,QADJ4P,EAAA7b,OAAA8b,GAAA,EAAA9b,CAAAwa,EAAA,GACnCL,EADmC0B,EAAA,GAC7Bjb,EAD6Bib,EAAA,GAIxC,OAFA/O,EAAKqN,KAAOA,EACZjZ,QAAQC,IAAIgZ,EAAMvZ,GACVuZ,EAAK5C,SACX,KHxFuB,EGyFrBzK,EAAK+M,kBAAkBM,EAAMvZ,GAC7B,MACF,KH1FoB,EG2FlBkM,EAAK8M,gBAAgBO,EAAMvZ,GAC3B,MACF,KH5FmB,EG6FjB,IAAImb,EAAQjP,EAAKmN,eAAe3F,QAAQkE,eAC3B,MAATuD,GACFA,EAAMnb,GAER,MACF,QACEM,QAAQC,IAAI,8DAMJ6a,EAAQpb,GACtBM,QAAQC,IAAI,YAAaP,GACzBV,KAAK6Z,YAAYzF,QAAQT,gBAAgBjT,EAAKqb,gDAG9BC,EAAUC,GAC1Bjc,KAAKga,UAAYiC,EACjB,IAAI5C,EAAiBrZ,KAAKga,UAAL,UACjBkC,EAAYlc,KAAKga,UAAL,WACZmC,EAAiBD,EAAUE,OAC7B,SAACC,EAAUjI,GAAX,OAAwBA,EAAWiI,IAEjCpD,EAAejL,KAAK7E,MAAMgT,EAAiBD,EAAUlW,QACrDkT,EAAegD,EAEfI,EAAYtc,KAAKga,UAAL,SACZuC,EAAWvc,KAAKga,UAAL,aAEXwC,EAAY,CAAC,CAAElG,MAAO,OAAQ/R,MAAO,GAAK,CAAE+R,MAAO,OAAQ/R,MAAO,KAElE+X,GAAaC,IACfC,EAAY,CACV,CAAElG,MAAO,OAAQ/R,MAAOgY,GACxB,CAAEjG,MAAO,OAAQ/R,MAAO+X,EAAYC,KAIxC,IAAIE,EAAgBzc,KAAKga,UAAL,aAChB0C,EAAgB1c,KAAKga,UAAL,aAEhB2C,EAAiBF,EAAgBzc,KAAK0E,MAAM0U,SAAX,UACjCwD,EAAiBF,EAAgB1c,KAAK0E,MAAM0U,SAAX,UAIjCyD,EAFe,IAAIhb,KAAKwX,EAAiB,KAC1B,IAAIxX,KAAK7B,KAAK0E,MAAM2U,eAAiB,KAGxDrY,QAAQC,IAAI0b,EAAgB,MAAOE,GACnC,IAAIC,EAAYD,EAAsB,IAClCzD,EAAW,CACb2D,UAAWN,EACXO,UAAWN,GAGTpD,EAAW,CACb2D,GAAIN,EAAiBG,EACrBI,KAAMN,EAAiBE,GAEzB9c,KAAK6E,SAAS,CACZoU,aAAcA,EACdC,aAAcA,EACdC,SAAUqD,EACVpD,SAAUA,EACVE,SAAUA,EACVD,eAAgBA,4CAKlB,IAAI8D,EAAMjG,GAAU,CAAE6E,KAAM,IAAM/b,KAAKia,KAAK7C,OHrKpB,EGqK0C,GAClEpX,KAAK8Z,aAAa1F,QAAQgJ,YAAYD,wCAG3Bhc,GACX,IAAIgc,EAAMjG,GAAU,CAAE6E,KAAM5a,GAAQnB,KAAKia,KAAK7C,OH1KtB,EG0K4C,GACpEpX,KAAK8Z,aAAa1F,QAAQgJ,YAAYD,oCAG/B,IAAA7P,EAAAtN,KACH+Y,EAAYjZ,OAAOud,QAAQrd,KAAK0E,MAAMqU,WAAW9M,IAAI,SAAAqR,GAAkB,IAAAC,EAAAzd,OAAA8b,GAAA,EAAA9b,CAAAwd,EAAA,GAAhB9X,EAAgB+X,EAAA,GAAXhZ,EAAWgZ,EAAA,GACzE,MAAY,eAAR/X,GAAgC,cAARA,EAExB1B,EAAAC,EAAAC,cAAA,WACGwB,EADH,KACU,IACR1B,EAAAC,EAAAC,cAACwZ,GAAAzZ,EAAD,CAAQ0Z,GAAG,iBAAiBC,OAAO,wBAChCnZ,GAHL,KAKIT,EAAAC,EAAAC,cAACwZ,GAAAzZ,EAAD,CAAQ4Z,SAAO,GAAEpZ,IAKvBT,EAAAC,EAAAC,cAAA,WACGwB,EADH,MACWjB,EAAMqZ,cAIjBxR,EAAatM,OAAOud,QAAQrd,KAAK0E,MAAM0H,YAAYH,IACrD,SAAA4R,GAAkB,IAAAC,EAAAhe,OAAA8b,GAAA,EAAA9b,CAAA+d,EAAA,GAAhBrY,EAAgBsY,EAAA,GAAXvZ,EAAWuZ,EAAA,GAChB,GAAIvZ,EAAMyB,OAAS,EACjB,OACElC,EAAAC,EAAAC,cAAA,WACGwB,EADH,MACWjB,EAAMqZ,cAMzB,SAASG,EAAYha,EAAGia,GACtB,GAAI,IAAMja,EAAG,MAAO,UACpB,IACEgS,EAAIiI,GAAK,EAETC,EAAIjQ,KAAKC,MAAMD,KAAK/M,IAAI8C,GAAKiK,KAAK/M,IAH5B,OAIR,OAAOid,YAAYna,EAAIiK,KAAKmQ,IAJpB,KAI2BF,IAAIG,QAAQrI,IAAM,IAF/C,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAEOkI,GAkB/D,OACEna,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC7B3C,EAAAC,EAAAC,cAACqC,EAAA,KAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAAA,MAAIC,UAAW,8BAAf,aACAH,EAAAC,EAAAC,cAAA,OAAKmI,GAAG,gBACNrI,EAAAC,EAAAC,cAACqa,GAAD,CAAUld,KAAMnB,KAAK0E,MAAMuU,kBAIjCnV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,iCACqBhE,KAAK0E,MAAMwU,aAAalT,QAE7ClC,EAAAC,EAAAC,cAAA,MAAImI,GAAG,eAAelI,UAAW,gBAC9BnE,OAAOwe,KAAKte,KAAK0E,MAAMwU,cAAcjN,IAAI,SAAAzG,GACxC,OACE1B,EAAAC,EAAAC,cAAA,UAAKgK,KAAK7E,MAAMmE,EAAK5I,MAAMwU,aAAa1T,IAAxC,WAMV1B,EAAAC,EAAAC,cAACqC,EAAA,WAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBACXjE,KAAK0E,MAAMuU,aADd,IAC6B,UAOvCnV,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC7B3C,EAAAC,EAAAC,cAACqC,EAAA,KAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAAA,MAAIC,UAAW,8BAAf,gBAGAH,EAAAC,EAAAC,cAAA,OAAKmI,GAAG,gBACNrI,EAAAC,EAAAC,cAACua,GAAD,CACEta,UAAU,eACV+Q,OAAQhV,KAAK0E,MAAMyU,iBAcjCrV,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC7B3C,EAAAC,EAAAC,cAACqC,EAAA,KAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACEvC,EAAAC,EAAAC,cAAA,MAAIC,UAAW,8BAAf,iBACAH,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BACZ8Z,EAAY/d,KAAK0E,MAAM4U,SAAX,IAFf,OAKFxV,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BAA6B,IACzC8Z,EAAY/d,KAAK0E,MAAM4U,SAAX,MAFf,SAQNxV,EAAAC,EAAAC,cAACqC,EAAA,WAAD,KACAvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACIvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACZ8Z,EAAY/d,KAAK0E,MAAM0U,SAAX,aAGjBtV,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACZ8Z,EAAY/d,KAAK0E,MAAM0U,SAAX,WAAmC,UAS5DtV,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC7B3C,EAAAC,EAAAC,cAACqC,EAAA,KAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAAA,MAAIC,UAAW,+BAAf,cAGAH,EAAAC,EAAAC,cAAA,OAAKmI,GAAG,aAAa4M,MAI3BjV,EAAAC,EAAAC,cAACqC,EAAA,WAAD,QAGJvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC7B3C,EAAAC,EAAAC,cAACqC,EAAA,KAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAAA,MAAIC,UAAW,gCAAf,kBAGAH,EAAAC,EAAAC,cAAA,OAAKmI,GAAG,kBAAkBC,MAIhCtI,EAAAC,EAAAC,cAACqC,EAAA,WAAD,SASNvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC/B3C,EAAAC,EAAAC,cAACqC,EAAA,KAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACwa,GAAD,CACEhR,IAAKxN,KAAK6Z,YACVjG,SAAU5T,KAAKyZ,kBAKvB3V,EAAAC,EAAAC,cAACqC,EAAA,WAAD,SAKNvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC/B3C,EAAAC,EAAAC,cAACqC,EAAA,KAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,SAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACqC,EAAA,IAAD,KACEvC,EAAAC,EAAAC,cAACya,GAAD,CAAajR,IAAKxN,KAAK+Z,oBAI7BjW,EAAAC,EAAAC,cAACqC,EAAA,WAAD,KACEvC,EAAAC,EAAAC,cAAA,UACE4J,QAAS,SAAAsM,GACPlZ,QAAQC,IAAIiZ,GACZ,IAAIiD,EAAMjG,GACR,CAAEwH,SAAU,EAAGC,QAAS,KACxBrR,EAAK2M,KAAK7C,OH9YL,EGgZL,GAEF9J,EAAKwM,aAAa1F,QAAQgJ,YAAYD,KAT1C,sBAiBRrZ,EAAAC,EAAAC,cAAC4a,GAAA7a,EAAD,CACE1B,IAAK,iCAAmCjB,GAAII,WAC5CgM,IAAKxN,KAAK8Z,aACVpG,UAAW1T,KAAKwZ,kBAAkBtZ,KAAKF,gBA3XvBgF,aD2CX6Z,eAlEb,SAAAA,EAAYlb,GAAM,IAAApD,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAA6e,IAChBte,EAAAT,OAAAsD,EAAA,EAAAtD,CAAAE,KAAAF,OAAAuD,EAAA,EAAAvD,CAAA+e,GAAAvb,KAAAtD,KAAM2D,KAwBRmb,kBAAoB,SAAClU,GACnBrK,EAAKsE,SAAS,CAAE2M,YAAa5G,KA1BbrK,EA4BlBwe,cAAgB,SAACnU,GACfrK,EAAKsE,SAAS,CAAEma,gBAAiBpU,KA3BjCrK,EAAKmE,MAAQ,CACXsa,gBAAiB,QACjBxN,YAAa,QAJCjR,mFAQZwQ,UAAUvE,SAASuD,QAAQ,QAAU,IACvCpK,GAAK,IAAIqL,IAAiBhR,KAAKmN,KAAK8R,WACpC1P,SAAS7O,KAAK+O,UAAUrB,OAAO,wEAI7B2C,UAAUvE,SAASuD,QAAQ,QAAU,IACvCpK,GAAGyL,UACH7B,SAAS7O,KAAK+O,UAAUrB,OAAO,oEAGhBxM,GACQ,SAArBA,EAAEgC,QAAQsb,SACZlf,KAAKmN,KAAK8R,UAAUE,UAAY,EAChC5P,SAAS6P,iBAAiBD,UAAY,oCAUxC,OAEErb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACqb,GAADvf,OAAAyI,OAAA,GACMvI,KAAK2D,MADX,CAEE+N,OAAQxC,GACRoC,QAAStR,KAAK0E,MAAMsa,gBACpBxN,YAAaxR,KAAK0E,MAAM8M,eAE1B1N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAauJ,IAAI,aAC9B1J,EAAAC,EAAAC,cAACsb,GAAWtf,KAAK2D,OACjBG,EAAAC,EAAAC,cAACub,EAAA,EAAD,KACEzb,EAAAC,EAAAC,cAACwb,EAAA,EAAD,CAAOhR,KAAK,mBAAmBC,UAAWiK,KAEzCxJ,GAAgBjD,IAAI,SAACU,EAAMnH,GAC1B,OAAImH,EAAKkC,SACA/K,EAAAC,EAAAC,cAACyb,EAAA,EAAD,CAAUC,KAAM/S,EAAK6B,KAAMb,GAAIhB,EAAKmC,OAAQtJ,IAAKA,IAIxD1B,EAAAC,EAAAC,cAACwb,EAAA,EAAD,CAAOhR,KAAM7B,EAAK6B,KAAMC,UAAW9B,EAAK8B,UAAWjJ,IAAKA,OAM9D1B,EAAAC,EAAAC,cAAC2b,GAAD,CAAQ1P,OAAK,aA3DC9J,IAAMnB,WEHxB4a,GAAOC,cAEbC,IAASC,OACPjc,EAAAC,EAAAC,cAACgc,EAAA,EAAD,CAAQpc,QAASgc,IACf9b,EAAAC,EAAAC,cAACub,EAAA,EAAD,KACCzb,EAAAC,EAAAC,cAACwb,EAAA,EAAD,CAAOS,OAAK,EAACzR,KAAK,SAASpK,KAAK,QAAQqK,UAAWtL,IACnDW,EAAAC,EAAAC,cAACwb,EAAA,EAAD,CAAOhR,KAAK,IAAIpK,KAAK,YAAYqK,UAAWoQ,OAI/CtP,SAAS2C,eAAe,2BCiL1B1S,EAAOC,QAAU,CACfoH,iCAtMuC,CACvC1F,KAAM,SAAA+e,GACJ,MAAO,CACLC,OAAQ,CACN,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFC,SAAU,CACR,CACEC,YAAa,UACbrB,gBAAiB,UACjBsB,YAAa,EACbC,iBAAkB,EAClBC,YAAa,EACbrf,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAEtD,CACEkf,YAAa,UACbrB,gBAAiB,UACjBsB,YAAa,EACbC,iBAAkB,EAClBC,YAAa,EACbrf,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAEtD,CACEkf,YAAa,UACbrB,gBAAiB,UACjBsB,YAAa,EACbC,iBAAkB,EAClBC,YAAa,EACbrf,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,SAK5DmB,QAAS,CACPuU,OAAQ,CACN4J,SAAS,GAGXC,SAAU,CACRC,SAAS,GAGXC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,UAAW,UACXC,aAAa,EACbC,cAAe,GAGjBC,UAAW,CACTC,YAAY,EACZC,cAAe,OACfxW,MAAO,4BAKbyW,MAAO,CACL,CACEC,cAAe,IACfJ,UAAW,CACTC,YAAY,EACZvW,MAAO,wBACPwW,cAAe,cACfX,SAAS,GAEXK,MAAO,CACLS,QAAS,GACTR,UAAW,gBAuHrB/Z,8BA/GoC,CACpC7F,KAAM,SAAA+e,GACJ,MAAO,CACLC,OAAQ,CAAC,EAAG,EAAG,GACfC,SAAU,CACR,CACEvY,MAAO,SACPyY,YAAa,EACbC,iBAAkB,EAClBvB,gBAAiB,CAAC,UAAW,UAAW,UAAW,WACnDwB,YAAa,EACbrf,KAAM,CAAC,IAAK,IAAK,IAAK,SAK9BmB,QAAS,CACPuU,OAAQ,CACN4J,SAAS,GAGXe,WAAY,CACVzB,OAAQ,aACRgB,UAAW,CAAC,SACZU,UAAW,GAGbf,SAAU,CACRC,SAAS,GAGXC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLL,SAAS,GAEXS,UAAW,CACTC,YAAY,EACZC,cAAe,cACfxW,MAAO,4BAKbyW,MAAO,CACL,CACEC,cAAe,IACfJ,UAAW,CACTC,YAAY,EACZvW,MAAO,wBACPwW,cAAe,eAEjBN,MAAO,CACLL,SAAS,QA0DnBxZ,qBAlD2B,CAC3B9F,KAAM,CACJgf,OAAQ,CACN,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFC,SAAU,CACR,CACEjf,KAAM,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAClDugB,MAAM,EACNrB,YAAa,UACbrB,gBAAiB,cACjB2C,iBAAkB,UAClBrB,YAAa,EACbC,iBAAkB,EAClBqB,iBAAkB,GAEpB,CACEzgB,KAAM,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjDugB,MAAM,EACNrB,YAAa,UACbrB,gBAAiB,cACjB2C,iBAAkB,UAClBrB,YAAa,EACbC,iBAAkB,EAClBqB,iBAAkB,KAIxBtf,QAAS,CACPuU,OAAQ,CACN4J,SAAS,EACTlM,SAAU","file":"static/js/main.16468cd6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/damir-bosnjak.a6f24e7d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mike.aab414f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ayo-ogunseinde-2.bfc688ca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/joe-gardner-2.76ff47ae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clem-onojeghuo-2.bb4b9ac9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import decode from 'jwt-decode';\nexport default class AuthService {\n    constructor(domain) {\n        this.domain = domain || 'http://localhost:8080'\n        this.fetch = this.fetch.bind(this)\n        this.login = this.login.bind(this)\n        this.getProfile = this.getProfile.bind(this)\n    }\n\n    login(username, password) {\n        // Get a token\n        return this.fetch(`${this.domain}/login/signin`, {\n            method: 'POST',\n            body: JSON.stringify({\n                'userid':username,\n                'password':password\n        })\n        }).then(res => {\n            console.log(res);\n            this.setToken(res.data.api)\n            return Promise.resolve(res);\n        })\n    }\n\n    loggedIn() {\n        // Checks if there is a saved token and it's still valid\n        const token = this.getToken()\n        return !!token && !this.isTokenExpired(token) // handwaiving here\n    }\n\n    isTokenExpired(token) {\n        try {\n            const decoded = decode(token);\n            console.log(decoded);\n            if (decoded.e < Date.now() / 1000) {\n                return true;\n            }\n            else\n                return false;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n\n    setToken(jwtToken) {\n        // Saves user token to localStorage\n        localStorage.setItem('jwt_token', jwtToken)\n    }\n\n    getToken() {\n        // Retrieves the user token from localStorage\n        return localStorage.getItem('jwt_token')\n    }\n\n    logout() {\n        // Clear user token and profile data from localStorage\n        localStorage.removeItem('jwt_token');\n    }\n\n    getProfile() {\n        return decode(this.getToken());\n    }\n\n\n    fetch(url, options) {\n        // performs api calls sending the required authentication headers\n        const headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        }\n\n        if (this.loggedIn()) {\n            headers['Authorization'] = 'Bearer ' + this.getToken()\n        }\n\n        return fetch(url, {\n            headers,\n            ...options\n        })\n            .then(this._checkStatus)\n            .then(response => response.json())\n    }\n\n    _checkStatus(response) {\n        // raises an error in case response status is not a success\n        if (response.status >= 200 && response.status < 300) {\n            return response\n        } else {\n            var error = new Error(response.statusText)\n            error.response = response\n            throw error\n        }\n    }\n}","import React, { Component } from 'react';\nimport AuthService from 'service/AuthService';\nimport './Login.css';\n\nclass Login extends Component {\n    constructor(){\n        super();\n        this.handleChange = this.handleChange.bind(this);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.Auth = new AuthService();\n    }\n    componentWillMount(){\n        if(this.Auth.loggedIn())\n            this.props.history.replace('/');\n    }\n    render() {\n        return (\n            <div className=\"center\">\n                <div className=\"card\">\n                    <h1>Login</h1>\n                    <form onSubmit={this.handleFormSubmit}>\n                        <input\n                            className=\"form-item\"\n                            placeholder=\"Username goes here...\"\n                            name=\"username\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                        />\n                        <input\n                            className=\"form-item\"\n                            placeholder=\"Password goes here...\"\n                            name=\"password\"\n                            type=\"password\"\n                            onChange={this.handleChange}\n                        />\n                        <input\n                            className=\"form-submit\"\n                            value=\"SUBMIT\"\n                            type=\"submit\"\n                        />\n                    </form>\n                </div>\n            </div>\n        );\n    }\n\n    handleFormSubmit(e){\n        e.preventDefault();\n      \n        this.Auth.login(this.state.username,this.state.password)\n            .then(res =>{\n               this.props.history.replace('/dashboard');\n            })\n            .catch(err =>{\n                alert(err);\n            })\n    }\n\n    handleChange(e){\n        this.setState(\n            {\n                [e.target.name]: e.target.value\n            }\n        )\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport AuthService from 'service/AuthService';\n\nexport default function withAuth(AuthComponent) {\n    const Auth = new AuthService('http://localhost:8080');\n    return class AuthWrapped extends Component {\n        constructor() {\n            super();\n            this.state = {\n                user: null\n            }\n        }\n        componentDidMount() {\n            if (!Auth.loggedIn()) {\n                this.props.history.replace('/login')\n            }\n            else {\n                try {\n                    const profile = Auth.getProfile()\n                    this.setState({\n                        user: profile\n                    })\n                    console.log(\"logged int\")\n                }\n                catch(err){\n                    Auth.logout()\n                    this.props.history.replace('/login')\n                }\n            }\n        }\n\n        render() {\n            if (this.state.user) {\n                return (\n                    <AuthComponent history={this.props.history} user={this.state.user} />\n                )\n            }\n            else {\n                return null\n            }\n        }\n    };\n}\n\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav } from \"reactstrap\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nimport logo from \"logo.svg\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  render() {\n    return (\n      <div\n        className=\"sidebar\"\n        data-color={this.props.bgColor}\n        data-active-color={this.props.activeColor}\n      >\n        <div className=\"logo\">\n          <a\n            href=\"https://github.com/indrenicloud\"\n            className=\"simple-text logo-mini\"\n          >\n            <div className=\"logo-img\">\n              <img src={logo} alt=\"react-logo\" />\n            </div>\n          </a>\n          <a\n            href=\"https://github.com/indrenicloud\"\n            className=\"simple-text logo-normal\"\n          >\n            TriCloud          </a>\n        </div>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          <Nav>\n            {this.props.routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav>\n\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Stats extends React.Component {\n  render() {\n    var stats = [];\n    for (var i = 0; i < this.props.children.length; i++) {\n      stats.push(<i className={this.props.children[i].i} key={i} />);\n      stats.push(\" \" + this.props.children[i].t);\n      if (i !== this.props.children.length - 1) {\n        stats.push(<br />);\n      }\n    }\n    return <div className=\"stats\">{stats}</div>;\n  }\n}\n\nStats.propTypes = {\n  children: PropTypes.array\n};\n\nexport default Stats;\n","import React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass CardAuthor extends React.Component {\n  render() {\n    return (\n      <div className=\"author\">\n        <a href={this.props.link ? this.props.link : \"#\"}>\n          <img\n            className=\"avatar border-gray\"\n            src={this.props.avatar}\n            alt={this.props.avatarAlt}\n          />\n          <h5 className=\"title\">{this.props.title}</h5>\n        </a>\n        <p className=\"description\">{this.props.description}</p>\n      </div>\n    );\n  }\n}\n\nCardAuthor.propTypes = {\n  // Where the user to be redirected on clicking the avatar\n  link: PropTypes.string,\n  avatar: PropTypes.string,\n  avatarAlt: PropTypes.string,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\n};\n\nexport default CardAuthor;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col\n} from \"reactstrap\";\n// react plugin used to create charts\nimport { Line, Pie } from \"react-chartjs-2\";\n// function that returns a color based on an interval of numbers\nimport withAuth from 'components/Login/withAuth.jsx';\nimport Stats from \"components/Stats/Stats.jsx\";\nimport {\n  dashboard24HoursPerformanceChart,\n  dashboardEmailStatisticsChart,\n  dashboardNASDAQChart\n} from \"variables/charts.jsx\";\n\nclass Dashboard extends React.Component {\n  render() {\n    return (\n      <div className=\"content\">\n        <Row>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-globe text-warning\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Capacity</p>\n                      <CardTitle tag=\"p\">150GB</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-sync-alt\",\n                      t: \"Update Now\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-money-coins text-success\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Revenue</p>\n                      <CardTitle tag=\"p\">$ 1,345</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"far fa-calendar\",\n                      t: \"Last day\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-vector text-danger\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Errors</p>\n                      <CardTitle tag=\"p\">23</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"far fa-clock\",\n                      t: \"In the last hour\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-favourite-28 text-primary\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Followers</p>\n                      <CardTitle tag=\"p\">+45K</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-sync-alt\",\n                      t: \"Update now\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12}>\n            <Card>\n              <CardHeader>\n                <CardTitle>Users Behavior</CardTitle>\n                <p className=\"card-category\">24 Hours performance</p>\n              </CardHeader>\n              <CardBody>\n                <Line\n                  data={dashboard24HoursPerformanceChart.data}\n                  options={dashboard24HoursPerformanceChart.options}\n                  width={400}\n                  height={100}\n                />\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-history\",\n                      t: \" Updated 3 minutes ago\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} sm={12} md={4}>\n            <Card>\n              <CardHeader>\n                <CardTitle>Email Statistics</CardTitle>\n                <p className=\"card-category\">Last Campaign Performance</p>\n              </CardHeader>\n              <CardBody>\n                <Pie\n                  data={dashboardEmailStatisticsChart.data}\n                  options={dashboardEmailStatisticsChart.options}\n                />\n              </CardBody>\n              <CardFooter>\n                <div className=\"legend\">\n                  <i className=\"fa fa-circle text-primary\" /> Opened{\" \"}\n                  <i className=\"fa fa-circle text-warning\" /> Read{\" \"}\n                  <i className=\"fa fa-circle text-danger\" /> Deleted{\" \"}\n                  <i className=\"fa fa-circle text-gray\" /> Unopened\n                </div>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-calendar-alt\",\n                      t: \" Number of emails sent\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={12} md={8}>\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <CardTitle>NASDAQ: AAPL</CardTitle>\n                <p className=\"card-category\">Line Chart With Points</p>\n              </CardHeader>\n              <CardBody>\n                <Line\n                  data={dashboardNASDAQChart.data}\n                  options={dashboardNASDAQChart.options}\n                  width={400}\n                  height={100}\n                />\n              </CardBody>\n              <CardFooter>\n                <div className=\"chart-legend\">\n                  <i className=\"fa fa-circle text-info\" /> Tesla Model S{\" \"}\n                  <i className=\"fa fa-circle text-warning\" /> BMW 5 Series\n                </div>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-check\",\n                      t: \" Data information certified\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Dashboard);\n","import React, { Component } from \"react\";\nimport {\n  FormGroup,\n  Label,\n  Input,\n  InputGroup,\n  InputGroupAddon\n} from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass FieldGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      focus: false\n    };\n  }\n  render() {\n    const {\n      label,\n      addonLeft,\n      addonRight,\n      formGroupProps,\n      labelProps,\n      inputProps,\n      inputGroupProps,\n      inputGroupAddonProps\n    } = this.props;\n    var classes = \" \";\n    if (inputGroupProps !== undefined) {\n      if (inputGroupProps.className !== undefined) {\n        classes += inputGroupProps.className + \" \";\n      }\n    }\n    if (addonLeft !== undefined || addonRight !== undefined)\n      return (\n        <InputGroup\n          {...inputGroupProps}\n          className={classes + (this.state.focus ? \"input-group-focus\" : \"\")}\n        >\n          {addonLeft !== undefined ? (\n            <InputGroupAddon {...inputGroupAddonProps}>\n              {addonLeft}\n            </InputGroupAddon>\n          ) : (\n            \"\"\n          )}\n          <Input\n            {...inputProps}\n            onFocus={e => this.setState({ focus: true })}\n            onBlur={e => this.setState({ focus: false })}\n          />\n          {addonRight !== undefined ? (\n            <InputGroupAddon {...inputGroupAddonProps}>\n              {addonRight}\n            </InputGroupAddon>\n          ) : (\n            \"\"\n          )}\n        </InputGroup>\n      );\n    return inputProps.type === \"radio\" || inputProps.type === \"checkbox\" ? (\n      <FormGroup\n        {...formGroupProps}\n        className={inputProps.type === \"radio\" ? \"form-check-radio\" : \"\"}\n      >\n        <Label {...labelProps}>\n          <Input {...inputProps} />\n          <span className=\"form-check-sign\" />\n          {label ? label : \"\"}\n        </Label>\n      </FormGroup>\n    ) : (\n      <FormGroup {...formGroupProps}>\n        {label ? <Label {...labelProps}>{label}</Label> : \"\"}\n        <Input {...inputProps} />\n      </FormGroup>\n    );\n  }\n}\n\nexport class FormInputs extends Component {\n  render() {\n    var row = [];\n    for (var i = 0; i < this.props.ncols.length; i++) {\n      row.push(\n        <div key={i} className={this.props.ncols[i]}>\n          <FieldGroup {...this.props.proprieties[i]} />\n        </div>\n      );\n    }\n    return <div className=\"row\">{row}</div>;\n  }\n}\n\nFormInputs.propTypes = {\n  ncols: PropTypes.arrayOf(PropTypes.string),\n  proprieties: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default FormInputs;\n","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\n// used to make this component's props into classes\nimport cx from \"classnames\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass CustomButton extends Component {\n  render() {\n    const {\n      simple,\n      round,\n      icon,\n      neutral,\n      leftLabel,\n      rightLabel,\n      wd,\n      link,\n      fab,\n      className,\n      ...rest\n    } = this.props;\n\n    var btnClasses = cx({\n      \"btn-simple\": simple,\n      \"btn-round\": round,\n      \"btn-icon\": icon,\n      \"btn-neutral\": neutral,\n      \"btn-wd\": wd,\n      \"btn-link\": link,\n      \"btn-fab\": fab\n    });\n\n    if (className !== undefined) {\n      btnClasses += \" \" + className;\n    }\n\n    return (\n      <Button className={btnClasses} {...rest}>\n        {leftLabel ? (\n          <span className=\"btn-label\">\n            <i className={leftLabel} />{\" \"}\n          </span>\n        ) : null}\n        {this.props.children}\n        {rightLabel ? (\n          <span className=\"btn-label btn-label-right\">\n            <i className={rightLabel} />{\" \"}\n          </span>\n        ) : null}\n      </Button>\n    );\n  }\n}\n\nCustomButton.propTypes = {\n  simple: PropTypes.bool,\n  round: PropTypes.bool,\n  icon: PropTypes.bool,\n  neutral: PropTypes.bool,\n  wd: PropTypes.bool,\n  link: PropTypes.bool,\n  fab: PropTypes.bool,\n  // this is an icon\n  leftLabel: PropTypes.string,\n  // this is an icon\n  rightLabel: PropTypes.string\n};\n\nexport default CustomButton;\n","// ##############################\n// // // table head data and table body data for Tables view\n// #############################\n\nconst thead = [\"ID\", \"OS\", \"Hostname\", \"Owner\", \"Platform\", \"Status\"];\n\n// data for <thead> of table in TableList view\n// data for <tbody> of table in TableList view\nexport { thead };\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  CardFooter,\n  Row,\n  Col\n} from \"reactstrap\";\n\nimport CardAuthor from \"components/CardElements/CardAuthor.jsx\";\nimport FormInputs from \"components/FormInputs/FormInputs.jsx\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\n\nimport damirBosnjak from \"assets/img/damir-bosnjak.jpg\";\nimport mike from \"assets/img/mike.jpg\";\nimport ayoOgunseinde2 from \"assets/img/faces/ayo-ogunseinde-2.jpg\";\nimport joeGardner2 from \"assets/img/faces/joe-gardner-2.jpg\";\nimport clemOnojeghuo2 from \"assets/img/faces/clem-onojeghuo-2.jpg\";\nimport withAuth from \"components/Login/withAuth\";\nclass User extends React.Component {\n  render() {\n    return (\n      <div className=\"content\">\n        <Row>\n          <Col md={4} xs={12}>\n            <Card className=\"card-user\">\n              <div className=\"image\">\n                <img src={damirBosnjak} alt=\"...\" />\n              </div>\n              <CardBody>\n                <CardAuthor\n                  avatar={mike}\n                  avatarAlt=\"...\"\n                  title=\"Chet Faker\"\n                  description=\"@chetfaker\"\n                />\n                <p className=\"description text-center\">\n                  \"I like the way you work it <br />\n                  No diggity <br />I wanna bag it up\"\n                </p>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"button-container\">\n                  <Row>\n                    <Col xs={6} sm={6} md={6} lg={3} className=\"ml-auto\">\n                      <h5>\n                        12\n                        <br />\n                        <small>Files</small>\n                      </h5>\n                    </Col>\n                    <Col\n                      xs={6}\n                      sm={6}\n                      md={6}\n                      lg={4}\n                      className=\"mr-auto ml-auto\"\n                    >\n                      <h5>\n                        2GB\n                        <br />\n                        <small>Used</small>\n                      </h5>\n                    </Col>\n                    <Col lg={3} className=\"mr-auto\">\n                      <h5>\n                        24,6$\n                        <br />\n                        <small>Spent</small>\n                      </h5>\n                    </Col>\n                  </Row>\n                </div>\n              </CardFooter>\n            </Card>\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Team Members</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <ul className=\"list-unstyled team-members\">\n                  <li>\n                    <Row>\n                      <Col xs={2} md={2}>\n                        <div className=\"avatar\">\n                          <img\n                            src={ayoOgunseinde2}\n                            alt=\"ayoOgunseinde2\"\n                            className=\"img-circle img-no-padding img-responsive\"\n                          />\n                        </div>\n                      </Col>\n                      <Col xs={7} md={7}>\n                        DJ Khaled\n                        <br />\n                        <span className=\"text-muted\">\n                          <small>Offline</small>\n                        </span>\n                      </Col>\n                      <Col xs={3} md={3} className=\"text-right\">\n                        <Button size=\"sm\" color=\"success\" round icon outline>\n                          <i className=\"fa fa-envelope\" />\n                        </Button>\n                      </Col>\n                    </Row>\n                  </li>\n                  <li>\n                    <Row>\n                      <Col xs={2} md={2}>\n                        <div className=\"avatar\">\n                          <img\n                            src={joeGardner2}\n                            alt=\"joeGardner2\"\n                            className=\"img-circle img-no-padding img-responsive\"\n                          />\n                        </div>\n                      </Col>\n                      <Col xs={7} md={7}>\n                        Creative Tim\n                        <br />\n                        <span className=\"text-success\">\n                          <small>Available</small>\n                        </span>\n                      </Col>\n                      <Col xs={3} md={3} className=\"text-right\">\n                        <Button size=\"sm\" color=\"success\" round icon outline>\n                          <i className=\"fa fa-envelope\" />\n                        </Button>\n                      </Col>\n                    </Row>\n                  </li>\n                  <li>\n                    <Row>\n                      <Col xs={2} md={2}>\n                        <div className=\"avatar\">\n                          <img\n                            src={clemOnojeghuo2}\n                            alt=\"clemOnojeghuo2\"\n                            className=\"img-circle img-no-padding img-responsive\"\n                          />\n                        </div>\n                      </Col>\n                      <Col xs={7} md={7}>\n                        Flume\n                        <br />\n                        <span className=\"text-danger\">\n                          <small>Busy</small>\n                        </span>\n                      </Col>\n                      <Col xs={3} md={3} className=\"text-right\">\n                        <Button size=\"sm\" color=\"success\" round icon outline>\n                          <i className=\"fa fa-envelope\" />\n                        </Button>\n                      </Col>\n                    </Row>\n                  </li>\n                </ul>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col md={8} xs={12}>\n            <Card className=\"card-user\">\n              <CardHeader>\n                <CardTitle>Edit Profile</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <form>\n                  <FormInputs\n                    ncols={[\"col-md-5 pr-1\", \"col-md-3 px-1\", \"col-md-4 pl-1\"]}\n                    proprieties={[\n                      {\n                        label: \"Company (disabled)\",\n                        inputProps: {\n                          type: \"text\",\n                          disabled: true,\n                          defaultValue: \"Creative Code Inc.\"\n                        }\n                      },\n                      {\n                        label: \"Username\",\n                        inputProps: {\n                          type: \"text\",\n                          defaultValue: \"chetfaker\"\n                        }\n                      },\n                      {\n                        label: \"Email address\",\n                        inputProps: {\n                          type: \"email\",\n                          placeholder: \"Email\"\n                        }\n                      }\n                    ]}\n                  />\n                  <FormInputs\n                    ncols={[\"col-md-6 pr-1\", \"col-md-6 pl-1\"]}\n                    proprieties={[\n                      {\n                        label: \"First Name\",\n                        inputProps: {\n                          type: \"text\",\n                          placeholder: \"First Name\",\n                          defaultValue: \"Chet\"\n                        }\n                      },\n                      {\n                        label: \"Last Name\",\n                        inputProps: {\n                          type: \"text\",\n                          placeholder: \"Last Name\",\n                          defaultValue: \"Faker\"\n                        }\n                      }\n                    ]}\n                  />\n                  <FormInputs\n                    ncols={[\"col-md-12\"]}\n                    proprieties={[\n                      {\n                        label: \"Address\",\n                        inputProps: {\n                          type: \"text\",\n                          placeholder: \"Home Address\",\n                          defaultValue: \"Melbourne, Australia\"\n                        }\n                      }\n                    ]}\n                  />\n                  <FormInputs\n                    ncols={[\"col-md-4 pr-1\", \"col-md-4 px-1\", \"col-md-4 pl-1\"]}\n                    proprieties={[\n                      {\n                        label: \"City\",\n                        inputProps: {\n                          type: \"text\",\n                          defaultValue: \"Melbourne\",\n                          placeholder: \"City\"\n                        }\n                      },\n                      {\n                        label: \"Country\",\n                        inputProps: {\n                          type: \"text\",\n                          defaultValue: \"Australia\",\n                          placeholder: \"Country\"\n                        }\n                      },\n                      {\n                        label: \"Postal Code\",\n                        inputProps: {\n                          type: \"number\",\n                          placeholder: \"ZIP Code\"\n                        }\n                      }\n                    ]}\n                  />\n                  <FormInputs\n                    ncols={[\"col-md-12\"]}\n                    proprieties={[\n                      {\n                        label: \"About Me\",\n                        inputProps: {\n                          type: \"textarea\",\n                          defaultValue:\n                            \"Oh so, your weak rhyme You doubt I'll bother, reading into it\",\n                          placeholder: \"Here can be your description\"\n                        }\n                      }\n                    ]}\n                  />\n                  <Row>\n                    <div className=\"update ml-auto mr-auto\">\n                      <Button color=\"primary\" round>\n                        Update Profile\n                      </Button>\n                    </div>\n                  </Row>\n                </form>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(User);\n","\nexport default class Api {\n    constructor(){\n        this.API_URL = \"http://localhost:8080\";\n        this.fetch = this.fetch.bind(this)\n    }\n    postData(route, data) {\n        return this.fetch(this.API_URL+route, {\n            method: 'POST',\n            body: JSON.stringify(data)\n        })\n    }\n\n    getData(route) {\n        return this.fetch(this.API_URL+route, {\n            method: 'GET'\n        })\n\n    }\n\n    deleteData(route) {\n        return this.fetch(this.API_URL+route, {\n            method: 'DELETE'\n        })\n\n    }\n\n    fetch(url, options) {\n        // performs api calls sending the required authentication headers\n        const headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Api-key': this.getToken()\n        }\n\n        return fetch(url, {     \n            headers,\n            ...options\n        })\n            .then(this._checkStatus)\n            .then(response => response.json())\n    }\n\n    _checkStatus(response) {\n        // raises an error in case response status is not a success\n        if (response.status >= 200 && response.status < 300) {\n            return response\n        } else {\n            var error = new Error(response.statusText)\n            error.response = response\n            throw error\n        }\n    }\n    getToken() {\n        // Retrieves the user token from localStorage\n        return localStorage.getItem('jwt_token')\n    }\n\n}","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Table,\n  Row,\n  Col\n} from \"reactstrap\";\nimport withAuth from \"components/Login/withAuth\";\nimport { thead } from \"variables/agents\";\nimport Api from \"service/Api\";\nimport \"./Agents.css\";\nimport { Link, Route } from \"react-router-dom\";\nimport NotificationAlert from \"react-notification-alert\";\n\nconst api = new Api();\nclass Agents extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      agents: null,\n      agentsinfo: [],\n      agentsempty: true\n    };\n    this.handleDelete = this.handleDelete.bind(this);\n    this.notify = this.notify.bind(this);\n    this.getAgents = this.getAgents.bind(this);\n  }\n\n  componentDidMount() {\n    this.getAgents();\n  }\n  componentDidUpdate() {\n    // this.getAgents();\n  }\n\n  getAgents() {\n    api.getData(\"/api/agents\").then(result => {\n      let agentsinfos = [];\n      if (result.data.length > 0) {\n        result.data.map(function(key) {\n          const info = {\n            data: [\n              key.id,\n              key.systeminfo.os,\n              key.systeminfo.hostname,\n              key.owner,\n              key.systeminfo.platform + \" \" + key.systeminfo.platformVersion,\n              key.active ? \"Active\" : \"Inactive\"\n            ]\n          };\n          agentsinfos.push(info);\n        });\n        this.setState({\n          agentsinfo: agentsinfos,\n          agentsempty: false\n        });\n      } else {\n        this.setState({\n          agentsinfo: [],\n          agentsempty: true\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      agentsinfo: [],\n      agentsempty: true\n    });\n  }\n\n  handleDelete(prop, key) {\n    var agentID = prop.data[0];\n    api.deleteData(\"/api/agents/\" + agentID).then(result => {\n      if (result.status === \"ok\") {\n        console.log(result.status);\n        this.notify(\"tr\", \"Successfully delete agent \" + agentID);\n      }\n      var agentsinfo = this.state.agentsinfo;\n      delete agentsinfo[key];\n      this.setState({\n        agentsinfo: agentsinfo\n      });\n    });\n  }\n\n  onDismiss() {}\n  notify(place, msg) {\n    var type = \"success\";\n    var options = {};\n    options = {\n      place: place,\n      message: (\n        <div>\n          <div>{msg}</div>\n        </div>\n      ),\n      type: type,\n      icon: \"nc-icon nc-bell-55\",\n      autoDismiss: 7\n    };\n    this.refs.notificationAlert.notificationAlert(options);\n  }\n  render() {\n    let emptyinfo;\n    if (this.state.agentsempty) {\n      emptyinfo = (\n        <div>\n          <center>Agent not found</center>\n        </div>\n      );\n    }\n      return (\n        <div className=\"content\">\n          <NotificationAlert ref=\"notificationAlert\" />\n          <Row>\n            <Col xs={12}>\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">List of Agents</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <Table responsive>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        {thead.map((prop, key) => {\n                          if (key === thead.length - 1)\n                            return (\n                              <th key={key} className=\"text-right\">\n                                {prop}\n                              </th>\n                            );\n                          return <th key={key}>{prop}</th>;\n                        })}\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.agentsinfo.map((prop, key) => {\n                        return (\n                          <tr key={key}>\n                            {prop.data.map((prop, key) => {\n                              return <td key={key}>{prop}</td>;\n                            })}\n                            <td>\n                              <div className=\"row\">\n                                <div className=\"col action\">\n                                  <Link to={`/agents/` + prop.data[0]}>\n                                    <i className=\"nc-icon nc-button-play text-success\" />\n                                  </Link>\n                                </div>\n                                <div className=\"col action\">\n                                  <i className=\"nc-icon nc-sound-wave text-warning\" />\n                                </div>\n                                <div className=\"col action\">\n                                  <i\n                                    className=\"nc-icon nc-simple-remove text-danger deletelist\"\n                                    onClick={() => this.handleDelete(prop, key)}\n                                  />\n                                </div>\n                              </div>\n                            </td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </Table>\n                  {emptyinfo}\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      );\n    }\n  \n}\n\nexport default withAuth(Agents);\n","import React from \"react\";\nimport AuthService from 'service/AuthService';\nimport withAuth from '../Login/withAuth';\nconst Auth = new AuthService();\n\nclass Logout extends React.Component {\n  constructor(pros){\n    super(pros);\n    this.handleLogout();\n  }\n\n  handleLogout(){\n    Auth.logout()\n    this.props.history.replace('/login');\n }\n render(){\n   return null;\n }\n\n}\n\nexport default withAuth(Logout);\n","/*eslint-disable*/\nimport React from \"react\";\nimport {\n  Alert,\n  Card,\n  CardTitle,\n  CardBody,\n  CardHeader,\n  Row,\n  Col\n} from \"reactstrap\";\n// react plugin for creating notifications over the dashboard\nimport NotificationAlert from \"react-notification-alert\";\n\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport withAuth from \"components/Login/withAuth\";\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: true\n    };\n    this.onDismiss = this.onDismiss.bind(this);\n    this.notify = this.notify.bind(this);\n  }\n  onDismiss() {}\n  notify(place) {\n    var color = Math.floor(Math.random() * 5 + 1);\n    var type;\n    switch (color) {\n      case 1:\n        type = \"primary\";\n        break;\n      case 2:\n        type = \"success\";\n        break;\n      case 3:\n        type = \"danger\";\n        break;\n      case 4:\n        type = \"warning\";\n        break;\n      case 5:\n        type = \"info\";\n        break;\n      default:\n        break;\n    }\n    var options = {};\n    options = {\n      place: place,\n      message: (\n        <div>\n          <div>\n            Welcome to <b>Paper Dashboard React</b> - a beautiful freebie for\n            every web developer.\n          </div>\n        </div>\n      ),\n      type: type,\n      icon: \"nc-icon nc-bell-55\",\n      autoDismiss: 7\n    };\n    this.refs.notificationAlert.notificationAlert(options);\n  }\n  render() {\n    return (\n      <div className=\"content\">\n        <NotificationAlert ref=\"notificationAlert\" />\n        <Row>\n          <Col md={12}>\n            <Card>\n              <CardHeader>\n                <CardTitle>Notifications</CardTitle>\n                <p className=\"card-category\">\n                  Handcrafted by our colleague <a target=\"_blank\" href=\"https://www.instagram.com/manu.nazare/\">Nazare Emanuel-Ioan (Manu)</a>. Please checkout the <a href=\"https://github.com/creativetimofficial/react-notification-alert\" target=\"_blank\">full documentation.</a>\n                </p>\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col md={6} xs={12}>\n                    <Card className=\"card-plain\">\n                      <CardHeader>\n                        <CardTitle>Notifications Style</CardTitle>\n                      </CardHeader>\n                      <CardBody>\n                        <Alert color=\"info\">\n                          <span>This is a plain notification</span>\n                        </Alert>\n                        <Alert\n                          color=\"info\"\n                          isOpen={this.state.visible}\n                          toggle={this.onDismiss}\n                        >\n                          <span>This is a notification with close button.</span>\n                        </Alert>\n                        <Alert\n                          color=\"info\"\n                          className=\"alert-with-icon\"\n                          isOpen={this.state.visible}\n                          toggle={this.onDismiss}\n                        >\n                          <span\n                            data-notify=\"icon\"\n                            className=\"nc-icon nc-bell-55\"\n                          />\n                          <span data-notify=\"message\">\n                            This is a notification with close button and icon.\n                          </span>\n                        </Alert>\n                        <Alert\n                          color=\"info\"\n                          className=\"alert-with-icon\"\n                          isOpen={this.state.visible}\n                          toggle={this.onDismiss}\n                        >\n                          <span\n                            data-notify=\"icon\"\n                            className=\"nc-icon nc-chart-pie-36\"\n                          />\n                          <span data-notify=\"message\">\n                            This is a notification with close button and icon and have\n                            many lines. You can see that the icon and the close button\n                            are always vertically aligned. This is a beautiful\n                            notification. So you don't have to worry about the style.\n                          </span>\n                        </Alert>\n                      </CardBody>\n                    </Card>\n                  </Col>\n                  <Col md={6} xs={12}>\n                    <Card className=\"card-plain\">\n                      <CardHeader>\n                        <CardTitle>Notification states</CardTitle>\n                      </CardHeader>\n                      <CardBody>\n                        <Alert\n                          color=\"primary\"\n                          isOpen={this.state.visible}\n                          toggle={this.onDismiss}\n                        >\n                          <span>\n                            <b> Primary - </b> This is a regular notification made with\n                            color=\"primary\"\n                          </span>\n                        </Alert>\n                        <Alert\n                          color=\"info\"\n                          isOpen={this.state.visible}\n                          toggle={this.onDismiss}\n                        >\n                          <span>\n                            <b> Info - </b> This is a regular notification made with\n                            color=\"info\"\n                          </span>\n                        </Alert>\n                        <Alert\n                          color=\"success\"\n                          isOpen={this.state.visible}\n                          toggle={this.onDismiss}\n                        >\n                          <span>\n                            <b> Success - </b> This is a regular notification made with\n                            color=\"success\"\n                          </span>\n                        </Alert>\n                        <Alert\n                          color=\"warning\"\n                          isOpen={this.state.visible}\n                          toggle={this.onDismiss}\n                        >\n                          <span>\n                            <b> Warning - </b> This is a regular notification made with\n                            color=\"warning\"\n                          </span>\n                        </Alert>\n                        <Alert\n                          color=\"danger\"\n                          isOpen={this.state.visible}\n                          toggle={this.onDismiss}\n                        >\n                          <span>\n                            <b> Danger - </b> This is a regular notification made with\n                            color=\"danger\"\n                          </span>\n                        </Alert>\n                      </CardBody>\n                    </Card>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={12} xs={12}>\n            <Card>\n              <CardBody>\n                <div className=\"places-buttons\">\n                  <Row>\n                    <Col md={6} className=\"ml-auto mr-auto text-center\">\n                      <CardTitle tag=\"h4\">\n                        Notifications Places\n                        <p className=\"category\">Click to view notifications</p>\n                      </CardTitle>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col lg={8} xs={12} className=\"ml-auto mr-auto\">\n                      <Row>\n                        <Col md={4} xs={12}>\n                          <Button\n                            color=\"primary\"\n                            block\n                            onClick={() => this.notify(\"tl\")}\n                          >\n                            Top Left\n                          </Button>\n                        </Col>\n                        <Col md={4} xs={12}>\n                          <Button\n                            color=\"primary\"\n                            block\n                            onClick={() => this.notify(\"tc\")}\n                          >\n                            Top Center\n                          </Button>\n                        </Col>\n                        <Col md={4} xs={12}>\n                          <Button\n                            color=\"primary\"\n                            block\n                            onClick={() => this.notify(\"tr\")}\n                          >\n                            Top Right\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col lg={8} xs={12} className=\"ml-auto mr-auto\">\n                      <Row>\n                        <Col md={4} xs={12}>\n                          <Button\n                            color=\"primary\"\n                            block\n                            onClick={() => this.notify(\"bl\")}\n                          >\n                            Bottom Left\n                          </Button>\n                        </Col>\n                        <Col md={4} xs={12}>\n                          <Button\n                            color=\"primary\"\n                            block\n                            onClick={() => this.notify(\"bc\")}\n                          >\n                            Bottom Center\n                          </Button>\n                        </Col>\n                        <Col md={4} xs={12}>\n                          <Button\n                            color=\"primary\"\n                            block\n                            onClick={() => this.notify(\"br\")}\n                          >\n                            Bottom Right\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Settings);\n","import Dashboard from \"views/Dashboard/Dashboard.jsx\";\nimport UserPage from \"views/UserPage/UserPage.jsx\";\nimport Agents from \"views/Agents/Agents.jsx\";\nimport Settings from \"views/Settings/Settings.jsx\";\nimport Logout from \"../components/Logout/Logout\";\n\nvar dashRoutes = [\n  // {\n  //   path: \"/dashboard\",\n  //   name: \"Dashboard\",\n  //   icon: \"nc-icon nc-bank\",\n  //   component: Dashboard\n  // },\n  {\n    path: \"/agents\",\n    name: \"Agents\",\n    icon: \"nc-icon nc-app\",\n    component: Agents\n  },\n  // {\n  //   path: \"/settings\",\n  //   name: \"Settings\",\n  //   icon: \"nc-icon nc-settings-gear-65\",\n  //   component: Settings\n  // },\n  // {\n  //   path: \"/user-page\",\n  //   name: \"Profile\",\n  //   icon: \"nc-icon nc-single-02\",\n  //   component: UserPage\n  // },\n  {\n    path: \"/logout\",\n    name: \"Logout\",\n    icon: \"nc-icon nc-caps-small\",\n    component: Logout\n  },\n  { redirect: true, path: \"/\", pathTo: \"/agents\", name: \"Dashboard\" }\n];\nexport default dashRoutes;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Container,\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon,\n  Input\n} from \"reactstrap\";\n\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n  }\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"dark\"\n      });\n    }\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n  getBrand() {\n    var name;\n    dashboardRoutes.map((prop, key) => {\n      if (prop.collapse) {\n        prop.views.map((prop, key) => {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n          return null;\n        });\n      } else {\n        if (prop.redirect) {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        } else {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        }\n      }\n      return null;\n    });\n    return name;\n  }\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.refs.sidebarToggle.classList.toggle(\"toggled\");\n  }\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\"\n      });\n    } else {\n      this.setState({\n        color: \"transparent\"\n      });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.refs.sidebarToggle.classList.toggle(\"toggled\");\n    }\n  }\n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : this.state.color\n        }\n        expand=\"lg\"\n        className={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\">\n              <button\n                type=\"button\"\n                ref=\"sidebarToggle\"\n                className=\"navbar-toggler\"\n                onClick={() => this.openSidebar()}\n              >\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </button>\n            </div>\n            <NavbarBrand href=\"/\">{this.getBrand()}</NavbarBrand>\n          </div>\n          <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          >\n            <form>\n              <InputGroup className=\"no-border\">\n                <Input placeholder=\"Search...\" />\n                <InputGroupAddon addonType=\"append\">\n                  <InputGroupText>\n                    <i className=\"nc-icon nc-zoom-split\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </form>\n            <Nav navbar>\n              <NavItem>\n                <Link to=\"#pablo\" className=\"nav-link btn-magnify\">\n                  <i className=\"nc-icon nc-layout-11\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Stats</span>\n                  </p>\n                </Link>\n              </NavItem>\n              <Dropdown\n                nav\n                isOpen={this.state.dropdownOpen}\n                toggle={e => this.dropdownToggle(e)}\n              >\n                <DropdownToggle caret nav>\n                  <i className=\"nc-icon nc-bell-55\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Some Actions</span>\n                  </p>\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem tag=\"a\">Action</DropdownItem>\n                  <DropdownItem tag=\"a\">Another Action</DropdownItem>\n                  <DropdownItem tag=\"a\">Something else here</DropdownItem>\n                </DropdownMenu>\n              </Dropdown>\n              <NavItem>\n                <Link to=\"#pablo\" className=\"nav-link btn-rotate\">\n                  <i className=\"nc-icon nc-settings-gear-65\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Account</span>\n                  </p>\n                </Link>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","/*eslint-disable*/\nimport React from \"react\";\nimport { Container, Row } from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}\n      >\n        <Container fluid={this.props.fluid ? true : false}>\n          <Row>\n           \n            <div className=\"credits ml-auto\">\n              <div className=\"copyright\">\n                &copy; {1900 + new Date().getYear()}, made with <i className=\"fa fa-heart heart\"></i> by TriCloud\n              </div>\n            </div>\n          </Row>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool\n};\n\nexport default Footer;\n","import React, { Component, Fragment } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./usagebar.css\";\n\nclass UsageBar extends Component {\n  constructor(props) {\n    super(props);\n    this.divref = React.createRef();\n  }\n\n  componentDidMount() {\n    let componentheight = document.getElementById(\"cpu_usagebar\").clientHeight;\n    let componentwidth = document.getElementById(\"cpu_usagebar\").clientWidth;\n    this.displayDCPU(componentheight, componentwidth, false);\n  }\n  componentDidUpdate() {\n    let componentheight = document.getElementById(\"cpu_usagebar\").clientHeight;\n    let componentwidth = document.getElementById(\"cpu_usagebar\").clientWidth;\n    this.displayDCPU(componentheight, componentwidth);\n  }\n\n  displayDCPU(height, width, _redraw = true) {\n    let data = this.props.data;\n    \n    console.log(data);\n\n    console.log(this.props.data);\n    if (_redraw) {\n      redraw(data);\n      return;\n    }\n    generate(data, \"#docker-cpu-rect-d3\");\n\n    //generation function\n    function generate(data, id) {\n      const margin = { top: 10, right: 0, bottom: 10, left: 10 };\n      height = height - margin.top - margin.bottom;\n      width = width -margin.left - margin.right;\n\n      var svg = d3\n        .select(id)\n        .append(\"svg\")\n        .attr(\"width\", width + margin.right + margin.left)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n      for (var i = 0; i < 20; i++) {\n        svg\n          .append(\"rect\")\n          .attr(\"width\", (width - 84) / 20)\n          .attr(\"height\", height * 0.55)\n          .attr(\"id\", \"docker_cpu_rect_\" + (i + 1))\n          .attr(\"transform\", \"translate(\" + (i * (width - 4)) / 20 + \",0)\");\n      }\n\n      var i = 0;\n      var temp = Math.floor(data / 5);\n      if (temp === 0 && data !== 0) temp = 1;\n\n      for (; i < 20; i++) {\n        svg.select(\"#docker_cpu_rect_\" + (i + 1)).style(\"fill\", \"#f3f3f3\");\n      }\n\n      var j = 0;\n      for (; j < temp; j++) {\n        console.log(\"coloring stuff\");\n        svg.select(\"#docker_cpu_rect_\" + (j + 1)).style(\"fill\", \"#fff\");\n      }\n\n      svg.selectAll(\".dockerCpuText\").remove();\n      /*\n      svg\n        .append(\"text\")\n        .attr(\"class\", \"dockerCpuText\")\n        .attr(\"x\", 0)\n        .attr(\"y\", height * 0.8 + margin.top)\n        .text(data + \"%\"); */\n    }\n\n    function redraw(data) {\n      var i = 0;\n      var temp = Math.floor(data / 5);\n      if (temp === 0 && data !== 0) temp = 1;\n\n      for (; i < temp; i++) {\n        d3.select(\"#docker_cpu_rect_\" + (i + 1)).style(\"fill\", \"#00afff\");\n      }\n\n      for (; i < 20; i++) {\n        d3.select(\"#docker_cpu_rect_\" + (i + 1)).style(\"fill\", \"#f3f3f3\");\n      }\n\n      //d3.select(\".dockerCpuText\").text(data + \"%\");\n    }\n  }\n  render() {\n    return (\n      <div\n        id={\"docker-cpu-rect-d3\"}\n        key={this.divref}\n        style={{ height: 120 + \"px\" }}\n      />\n    );\n  }\n}\n\nexport default UsageBar;\n","import React, { Component } from \"react\";\n\nimport { Terminal as xTerm } from \"xterm\";\nimport './Terminal.css';\nimport * as fit from 'xterm/lib/addons/fit/fit';\n\nclass Terminal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.myref = React.createRef();\n    this.onMessage = this.onMessage.bind(this);\n    this.outputFromAgent = this.outputFromAgent.bind(this);\n   \n  }\n\n  // input and stuff from xtermjs\n  onMessage(data) {\n    console.log(typeof data);\n    console.log(data);\n    this.props.sendtows(data);\n  }\n\n  outputFromAgent(output) {\n    console.log(\"VERY NEAR:\", output);\n    this.xterm.write(output);\n  }\n\n  componentDidMount() {\n    xTerm.applyAddon(fit);\n    this.xterm = new xTerm(this.props.options);\n    this.xterm.open(this.myref.current);\n    this.xterm.fit();\n\n    this.xterm.write(\"TriCloud \\x1B[1;3;31mTerminal\\x1B[0m $ \");\n    this.xterm.on(\"data\", this.onMessage);\n  }\n\n  render() {\n    return <div ref={this.myref} style={{\n      overflow: 'hidden',\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n    }}\n    options={{\n      cols: 80,\n      rows: 24,\n      cursorBlink: false,\n    }} />;\n  }\n}\n\nexport default Terminal;\n","import React, { Component, Fragment } from \"react\";\nimport * as d3 from \"d3\";\nimport * as scale from \"d3-scale\";\nexport default class MemDonut extends Component {\n  constructor(props) {\n    super(props);\n    this.sca = null;\n    this.getData = this.getData.bind(this)\n  \n  }\n\n\n  componentDidMount() {\n    let componentheight = document.getElementById(\"mem_usagebar\").clientHeight;\n    let componentwidth = document.getElementById(\"mem_usagebar\").clientWidth;    \n    this.displayMem(componentheight, componentwidth, false);\n  }\n  componentDidUpdate() {\n    let componentheight = document.getElementById(\"mem_usagebar\").clientHeight;\n    let componentwidth = document.getElementById(\"mem_usagebar\").clientWidth;\n    var e = document.getElementById(this.props.className)\n    if(e.firstChild){\n      e.removeChild(e.firstChild);\n      this.displayMem(componentheight, componentwidth);\n    }\n  }\n\n  getData() {\n    return  this.props.memory\n  }\n\n  displayMem(cheight,cwidth,_redraw) {\n    var data = this.getData()\n    console.log(\"data yaha cha\",data)\n\n    var category = ['Free', 'Used'],\n        cateColor = [ \"#ffee00\" , \"#0068b7\"];\n\n    //generation function\n    function generate(data, id) {\n      var margin = {top: 20, right: 0, bottom: 40, left: 0},\n          width = cwidth - margin.left - margin.right,\n          height = cheight - margin.top - margin.bottom;\n\n      var radius = Math.min(width, height) / 2,\n          innerRadius = radius * 0.25,\n          outerRadius = radius * 0.75;\n\n      var legendRectSize = radius/8,\n          legendSpacing = (radius/1.2)+20;\n\n      var color = scale\n          .scaleOrdinal()\n          .domain(category)\n          .range(cateColor);\n\n      var formatPercent = d3.format(\".0%\");\n\n      var pie = d3\n          .pie()\n          .value(function(d) {return d.value; })\n          .sort(null);\n\n      var arc = d3\n          .arc()\n          .innerRadius(innerRadius)\n          .outerRadius(outerRadius);\n\n      var svgX = (width+margin.right+margin.left) / 2,\n          svgY = (radius*2 + margin.top*2) / 2;\n\n      var svg = d3.select(id).append(\"svg\")\n          .attr(\"width\", width+margin.right+margin.left)\n          .attr(\"height\", height+margin.top+margin.bottom)\n          .append(\"g\")\n          .attr(\"transform\", \"translate(\" + svgX + \",\" + svgY + \")\");\n\n      var path = svg.datum(data).selectAll(\".solidArc\")\n          .data(pie)\n          .enter()\n          .append(\"path\")\n          .attr(\"fill\", function(d) {\n            return color(d.data.inits);\n          })\n          .attr(\"class\", \"solidArc\")\n          .attr(\"stroke\", \"none\")\n          .attr(\"d\", arc)\n          .each(function(d) {\n            this._current=d;\n          })\n          .on('mouseover', function(d) {\n            // console.log(d);\n\n            d3.select(this).transition().duration(200).attr(\"d\", arc.innerRadius(innerRadius).outerRadius(outerRadius / 0.75 * 0.9));\n\n            //count the sum\n            var count = 0;\n            for (var i = 0; i < category.length; i++) {\n              count += data[i]['value'];\n            }\n\n            svg.append(\"svg:text\")\n                .attr(\"class\", \"donutCenterText\")\n                .attr(\"dy\", \"-.3em\")\n                .attr(\"text-anchor\", \"middle\")\n                .transition().duration(200)\n                .text(d['data']['inits']);\n\n            svg.append(\"svg:text\")\n                .attr(\"class\", \"donutCenterText\")\n                .attr(\"dy\", \".8em\")\n                .attr(\"text-anchor\", \"middle\")\n                .transition().duration(200)\n                .text(formatPercent(d['value'] / count));\n\n          })\n          .on('mouseout', function(d) {\n            d3.select(this).transition().duration(200).attr(\"d\", arc.innerRadius(innerRadius).outerRadius(outerRadius));\n\n            d3.selectAll('.donutCenterText').remove();\n          });\n\n      //legend rendering\n      var legend = svg.selectAll('.legend')\n          .data(color.domain())\n          .enter()\n          .append('g')\n          .attr(\"id\", function(d) {\n            return \"legend-\" + d;\n          })\n          .attr('class', 'legend')\n          .attr('transform', function(d, i) {\n            var horz = (i-1)*(legendSpacing+legendRectSize);\n            var vert =  radius + margin.bottom / 4;\n            return 'translate(' + horz + ',' + vert + ')';\n          });\n\n      legend.append('rect')\n          .attr('width', legendRectSize)\n          .attr('height', legendRectSize)\n          .style('fill', color)\n          .style('stroke', color);\n\n      legend.append('text')\n          .data(data)\n          .attr('x', legendRectSize)\n          .attr('y', legendRectSize/1.3)\n          .text(function(d) {\n            //console.log(d);\n            return d.inits+\" \"+Math.round(d.value/(1024*1024))+\" MB\"; });\n\n      this.getPath = function() {\n        return path;\n      }\n\n      this.getArc = function() {\n        return d3.arc().innerRadius(innerRadius).outerRadius(outerRadius);\n      }\n    }\n\n    //redraw function\n    function redraw(data, path, arc) {\n      //for the transition effect of donut chart\n      var arcTween = function arcTween(a) {\n        var i = d3.interpolate(this._current, a);\n        this._current = i(0);\n        return function(t) {\n          return arc(i(t));\n        };\n      }\n\n      var donut = d3\n          .pie()\n          .value(function(d) {return d.value; })\n          .sort(null);\n\n      donut.value(function(d) { return d['value']; });\n      path = path.datum(data).data(donut).attr(\"d\", arc); // compute the new angles\n      path.transition().duration(750).attrTween(\"d\", arcTween);\n    }\n\n    //inits chart\n    // if (this.sca == null ) {\n    if(_redraw!=true){\n    this.sca = new generate(data, '#'+this.props.className);\n    return\n    }\n    else{\n    // return\n    // }\n    // console.log(\"UPDATE IN HERE\");\n    // let sca = this.sca;\n   // setInterval(function() {\n  //  if(this.sca !=null){\n   \n    redraw(data, this.sca.getPath(), this.sca.getArc());  \n    return\n    }\n  //  }\n // }, 5000)\n}\n\n  render() {\n    // using className from the props as ID for a bit of dynamic thing ;p\n    return <div id={this.props.className} style={{ height: \"248px\" }} />;\n  }\n}\n","export const CMD_SERVER_HELLO = 0;\nexport const CMD_SYSTEM_STAT = 1;\nexport const CMD_TERMINAL = 2;\nexport const CMD_TASKMGR = 3;\nexport const CMD_PROCESS_ACTION = 4;\nexport const CMD_LIST_SERVICES = 5;\nexport const CMD_SERVICE_ACTION = 6;\n\nexport function parsePacket(arrbuf) {\n  //let ubuff = new Uint8Array(data);\n  let offset = arrbuf.byteLength - 4;\n  let headerbuf = arrbuf.slice(offset, arrbuf.byteLength);\n  let headerdataview = new DataView(headerbuf, 0);\n  let connid = headerdataview.getUint16(0);\n  let cmdtype = headerdataview.getUint8(2);\n  let flow = headerdataview.getUint8(3);\n\n  //string/json\n  var response;\n  let bodybuff = arrbuf.slice(0, offset);\n  let bodydataview = new DataView(bodybuff);\n\n  if (\"TextDecoder\" in window) {\n    var decoder = new TextDecoder(\"utf-8\");\n    let rawstr = decoder.decode(bodydataview);\n    console.log(\"RAWSTR:\", rawstr);\n    response = JSON.parse(rawstr);\n  } else {\n    console.log(\"OLD BROWSER\");\n    let decodedString = String.fromCharCode.apply(\n      null,\n      new Uint8Array(bodybuff)\n    );\n    response = JSON.parse(decodedString);\n  }\n  let header = {\n    connid: connid,\n    flow: flow,\n    cmdtype: cmdtype\n  };\n\n  return [header, response];\n}\n\nexport function encodeMsg(msgstr, connid, cmdtype, flowtype) {\n  let connidarr = new Uint16Array([connid]);\n  let headUarr = new Uint8Array([\n    connidarr[1],\n    connidarr[0],\n    cmdtype,\n    flowtype\n  ]);\n  let bodyUarray;\n  if (\"TextDecoder\" in window) {\n    let json = JSON.stringify(msgstr);\n    let encoder = new TextEncoder();\n    bodyUarray = encoder.encode(json);\n  } else {\n    console.log(\"OLD Browser\");\n  }\n  let combined = new Uint8Array([...bodyUarray, ...headUarr]);\n\n  return combined.buffer;\n}\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Table,\n  Row,\n  Col\n} from \"reactstrap\";\n\nlet titles = [\"PID\", \"USER\", \"CPU\", \"MEM\", \"UpTime\", \"Command\"];\n\nexport default class TaskManager extends Component {\n  constructor(props) {\n    super(props);\n    this.setState({\n      termdata: {}\n    });\n    this.dataloaded = false;\n  }\n\n  getFilteredProcesses = () =>\n    this.state.termdata.filter(element => {\n      if (element[\"UpTime\"] == 0 || element[\"MEM\"] == 0) return false;\n      else return true;\n    });\n\n  updateTerminal = data => {\n    console.log(data);\n    this.dataloaded = true;\n    this.setState({\n      termdata: data.Processes\n    });\n  };\n\n  render() {\n    return (\n      this.dataloaded && (\n        <Table responsive>\n          <thead className=\"text-primary\">\n            <tr>\n              {titles.map((title, key) => {\n                if (key === titles.length - 1)\n                  return (\n                    <th key={key} className=\"text-right\">\n                      {title}\n                    </th>\n                  );\n                return <th key={key}>{title}</th>;\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {this.getFilteredProcesses().map((item, key) => {\n              return (\n                <tr key={key}>\n                  {titles.map((title, key) => {\n                    if (key === titles.length - 1)\n                      return (\n                        <th key={key} className=\"text-right\">\n                          {item[title]}\n                        </th>\n                      );\n                    return <th key={key}>{item[title]}</th>;\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      )\n    );\n  }\n}\n","import React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Header from \"components/Header/Header.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport AgentDetail from \"views/AgentDetail/AgentDetail\";\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\"\n    }\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.mainPanel);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      this.refs.mainPanel.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n  handleActiveClick = (color) => {\n    this.setState({ activeColor: color });\n  }\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  }\n  render() {\n    return (\n\n      <div className=\"wrapper\">\n        <Sidebar\n          {...this.props}\n          routes={dashboardRoutes}\n          bgColor={this.state.backgroundColor}\n          activeColor={this.state.activeColor}\n        />\n        <div className=\"main-panel\" ref=\"mainPanel\">\n          <Header {...this.props} />\n          <Switch>          \n            <Route path=\"/agents/:agentId\" component={AgentDetail} />\n\n            {dashboardRoutes.map((prop, key) => {\n              if (prop.redirect) {\n                return <Redirect from={prop.path} to={prop.pathTo} key={key} />;\n              }\n\n              return (\n                <Route path={prop.path} component={prop.component} key={key} />\n              );\n            })}\n\n          </Switch>\n\n          <Footer fluid />\n        </div>\n     \n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n  CardFooter\n} from \"reactstrap\";\nimport { Link, Route } from \"react-router-dom\";\nimport NotificationAlert from \"react-notification-alert\";\nimport Websocket from \"react-websocket\";\nimport { number } from \"prop-types\";\n\nimport UsageBar from \"components/UsageBar/UsageBar\";\nimport Terminal from \"components/Terminal/Terminal\";\nimport Stats from \"components/Stats/Stats.jsx\";\nimport withAuth from \"components/Login/withAuth\";\nimport { thead } from \"variables/agents\";\nimport Api from \"service/Api\";\nimport \"./AgentDetail.css\";\nimport Moment from \"react-moment\";\nimport \"moment-timezone\";\nimport MemDonut from \"components/MemDonut/MemDonut\";\nimport {\n  parsePacket,\n  encodeMsg,\n  CMD_SYSTEM_STAT,\n  CMD_TERMINAL,\n  CMD_TASKMGR\n} from \"../../service/utility\";\nimport TaskManager from \"../../components/TaskManager/TaskManager\";\n\nconst api = new Api();\n\nclass AgentDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.agentid = this.props.match.params.agentId;\n    this.state = {\n      agentinfo: {},\n      systeminfo: {},\n      realcpumem_usage: {},\n      avgcpu_usage: 0,\n      allcpu_usage: [],\n      memusage: [{ inits: \"Free\", value: 50 }, { inits: \"Used\", value: 50 }],\n      netusage: {},\n      stat_timestamp: 0,\n      netspeed: {}\n    };\n    this.getAgentData = this.getAgentData.bind(this);\n    this.webSocketResponse = this.webSocketResponse.bind(this);\n    this.terminalToWs = this.terminalToWs.bind(this);\n    this.ProcessTerminal = this.ProcessTerminal.bind(this);\n    this.ProcessSystemStat = this.ProcessSystemStat.bind(this);\n    this.startTerminal = this.startTerminal.bind(this);\n    this.terminalRef = React.createRef();\n    this.websocketRef = React.createRef();\n    this.taskmanagerRef = React.createRef();\n    this.sys_usage = {};\n    this.head = {};\n  }\n\n  componentDidMount() {\n    this.getAgentData();\n  }\n\n  getAgentData() {\n    api.getData(\"/api/agents/\" + this.agentid).then(result => {\n      const systeminfo = result.data[\"systeminfo\"];\n      delete result.data[\"systeminfo\"];\n      this.setState({\n        agentinfo: result.data,\n        systeminfo: systeminfo\n      });\n    });\n  }\n\n  webSocketResponse(event) {\n    console.log(event);\n    let myReader = new FileReader();\n    myReader.readAsArrayBuffer(event);\n    myReader.addEventListener(\"loadend\", e => {\n      let [head, body] = parsePacket(e.srcElement.result);\n      this.head = head;\n      console.log(head, body);\n      switch (head.cmdtype) {\n        case CMD_SYSTEM_STAT:\n          this.ProcessSystemStat(head, body);\n          break;\n        case CMD_TERMINAL:\n          this.ProcessTerminal(head, body);\n          break;\n        case CMD_TASKMGR:\n          let _func = this.taskmanagerRef.current.updateTerminal;\n          if (_func != null) {\n            _func(body);\n          }\n          break;\n        default:\n          console.log(\"Not implemented\");\n          break;\n      }\n    });\n  }\n\n  ProcessTerminal(header, body) {\n    console.log(\"VERY NEAR\", body);\n    this.terminalRef.current.outputFromAgent(body.Data);\n  }\n\n  ProcessSystemStat(respHead, respBody) {\n    this.sys_usage = respBody;\n    let stat_timestamp = this.sys_usage[\"TimeStamp\"];\n    let cpu_cores = this.sys_usage[\"CPUPercent\"];\n    let totalcpu_usage = cpu_cores.reduce(\n      (previous, current) => (current += previous)\n    );\n    let avgcpu_usage = Math.round(totalcpu_usage / cpu_cores.length);\n    let allcpu_usage = cpu_cores;\n\n    let total_mem = this.sys_usage[\"TotalMem\"];\n    let free_mem = this.sys_usage[\"AvailableMem\"];\n\n    let mem_usage = [{ inits: \"Free\", value: 1 }, { inits: \"Used\", value: 99 }];\n\n    if (total_mem && free_mem) {\n      mem_usage = [\n        { inits: \"Free\", value: free_mem },\n        { inits: \"Used\", value: total_mem - free_mem }\n      ];\n    }\n\n    let new_sentbytes = this.sys_usage[\"NetSentbytes\"];\n    let new_recvbytes = this.sys_usage[\"NetRecvbytes\"];\n\n    let sentbytes_diff = new_sentbytes - this.state.netusage[\"sentbytes\"];\n    let recvbytes_diff = new_recvbytes - this.state.netusage[\"recvbytes\"];\n\n    let new_datetime = new Date(stat_timestamp / 1000000);\n    let old_datetime = new Date(this.state.stat_timestamp / 1000000);\n    let stat_timestamp_diff = new_datetime - old_datetime;\n\n    console.log(sentbytes_diff, \"---\", stat_timestamp_diff);\n    let time_diff = stat_timestamp_diff / 1000;\n    let netusage = {\n      sentbytes: new_sentbytes,\n      recvbytes: new_recvbytes\n    };\n\n    let netspeed = {\n      up: sentbytes_diff / time_diff,\n      down: recvbytes_diff / time_diff\n    };\n    this.setState({\n      avgcpu_usage: avgcpu_usage,\n      allcpu_usage: allcpu_usage,\n      memusage: mem_usage,\n      netusage: netusage,\n      netspeed: netspeed,\n      stat_timestamp: stat_timestamp\n    });\n  }\n\n  startTerminal() {\n    let out = encodeMsg({ Data: \"\" }, this.head.connid, CMD_TERMINAL, 1);\n    this.websocketRef.current.sendMessage(out);\n  }\n\n  terminalToWs(data) {\n    let out = encodeMsg({ Data: data }, this.head.connid, CMD_TERMINAL, 1);\n    this.websocketRef.current.sendMessage(out);\n  }\n\n  render() {\n    var agentinfo = Object.entries(this.state.agentinfo).map(([key, value]) => {\n      if (key === \"firstadded\" || key === \"lastlogin\") {\n        return (\n          <div>\n            {key} :{\" \"}\n            <Moment tz=\"Asia/Kathmandu\" format=\"YYYY-MMM-DD HH:mm:ss\">\n              {value}\n            </Moment>\n            , <Moment fromNow>{value}</Moment>\n          </div>\n        );\n      }\n      return (\n        <div>\n          {key} : {value.toString()}\n        </div>\n      );\n    });\n    var systeminfo = Object.entries(this.state.systeminfo).map(\n      ([key, value]) => {\n        if (value.length > 0) {\n          return (\n            <div>\n              {key} : {value.toString()}\n            </div>\n          );\n        }\n      }\n    );\n    function formatBytes(a, b) {\n      if (0 === a) return \"0 Bytes\";\n      var c = 1024,\n        d = b || 2,\n        e = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"],\n        f = Math.floor(Math.log(a) / Math.log(c));\n      return parseFloat((a / Math.pow(c, f)).toFixed(d)) + \" \" + e[f];\n    }\n    // let total_mem = this.sys_usage[\"TotalMem\"];\n    // let free_mem = this.sys_usage[\"AvailableMem\"];\n    // let mem_usage = [\n    //   { inits: 'Free', value: 0 },\n    //   { inits: 'Used', value: 0 }\n    // ]\n    // if (total_mem && free_mem) {\n    //   mem_usage = [\n    //     { inits: 'Free', value: free_mem },\n    //     { inits: 'Used', value: total_mem - free_mem }\n    //   ]\n\n    // }\n\n    //console.log(api.getToken());\n    //dashboard-level\n    return (\n      <div className=\"content\">\n        <Row>\n          <Col xs={12} sm={6} md={6} lg={4}>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Col>\n                    <h3 className={\"card-title cpu_usage_title\"}>CPU Usage</h3>\n                    <div id=\"cpu_usagebar\">\n                      <UsageBar data={this.state.avgcpu_usage} />\n                    </div>\n                  </Col>\n                </Row>\n                <div className=\"stats\">\n                  <span>\n                    Total CPU Cores : {this.state.allcpu_usage.length}\n                  </span>\n                  <ul id=\"allcpu_usage\" className={\"allcpu_usage\"}>\n                    {Object.keys(this.state.allcpu_usage).map(key => {\n                      return (\n                        <li>{Math.round(this.state.allcpu_usage[key])}% </li>\n                      );\n                    })}\n                  </ul>\n                </div>\n              </CardBody>\n              <CardFooter>\n                <Row>\n                  <Col>\n                    <h3 className=\"avgcpu_stats center\">\n                      {this.state.avgcpu_usage}%{\" \"}\n                    </h3>\n                  </Col>\n                </Row>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={4}>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Col>\n                    <h3 className={\"card-title mem_usage_title\"}>\n                      Memory Usage\n                    </h3>\n                    <div id=\"mem_usagebar\">\n                      <MemDonut\n                        className=\"memory-donut\"\n                        memory={this.state.memusage}\n                      />\n                    </div>\n                  </Col>\n                </Row>\n                {/* <div className=\"stats\">\n                  \n                </div> */}\n              </CardBody>\n              {/* <CardFooter>\n              </CardFooter> */}\n            </Card>\n          </Col>\n      \n          <Col xs={12} sm={6} md={6} lg={4}>\n            <Card>\n              <CardBody>\n                <h3 className={\"card-title net_usage_title\"}>Network Usage</h3>\n                <Row>\n                  <Col>\n                    <div className=\"netspeed_stats center\">\n                      <i className=\"nc-icon nc-minimal-up\" />\n                      {formatBytes(this.state.netspeed[\"up\"])}/s\n                    </div>\n                  </Col>\n                  <Col>\n                    <div className=\"netspeed_stats center\">\n                      <i className=\"nc-icon nc-minimal-down\" />{\" \"}\n                      {formatBytes(this.state.netspeed[\"down\"])}/s\n                    </div>\n                  </Col>\n                </Row>\n                \n              </CardBody>\n              <CardFooter>\n              <Row>\n                  <Col>\n                    <div className=\"netusage_stats center\">\n                      {formatBytes(this.state.netusage[\"sentbytes\"])}\n                    </div>\n                  </Col>\n                  <Col>\n                    <div className=\"netusage_stats center\">\n                      {formatBytes(this.state.netusage[\"recvbytes\"])}{\" \"}\n                    </div>\n                  </Col>\n                </Row>\n              </CardFooter>\n            </Card>\n          </Col>\n       \n      \n          <Col xs={12} sm={6} md={6} lg={6}>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Col>\n                    <h3 className={\"card-title agent_info_title\"}>\n                      Agent Info\n                    </h3>\n                    <div id=\"agentinfo\">{agentinfo}</div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter />\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={6}>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Col>\n                    <h3 className={\"card-title system_info_title\"}>\n                      System Details\n                    </h3>\n                    <div id=\"system_details\">{systeminfo}</div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter />\n            </Card>\n          </Col>\n        </Row>\n        {/* <input\n          type=\"button\"\n          onClick={this.startTerminal}\n          name=\"Terminal start\"\n        /> */}\n        <Row>\n          <Col xs={12} sm={12} md={12} lg={12}>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Col>\n                    <Terminal\n                      ref={this.terminalRef}\n                      sendtows={this.terminalToWs}\n                    />\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter />\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={12} sm={12} md={12} lg={12}>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Col>\n                    <TaskManager ref={this.taskmanagerRef} />\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <button\n                  onClick={event => {\n                    console.log(event);\n                    let out = encodeMsg(\n                      { Interval: 5, Timeout: 200 },\n                      this.head.connid,\n                      CMD_TASKMGR,\n                      1\n                    );\n                    this.websocketRef.current.sendMessage(out);\n                  }}\n                >Show Processes</button>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n\n        <Websocket\n          url={\"ws://localhost:8080/websocket/\" + api.getToken()}\n          ref={this.websocketRef}\n          onMessage={this.webSocketResponse.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default AgentDetail;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport {  Router, Route, Switch } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/paper-dashboard.scss\";\nimport \"assets/demo/demo.css\";\nimport Login from \"components/Login/Login.jsx\";\nimport Dashboard from \"layouts/Dashboard/Dashboard.jsx\";\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist}>\n    <Switch>\n     <Route exact path=\"/login\" name=\"Login\" component={Login}></Route>\n     <Route path=\"/\" name=\"Dashboard\" component={Dashboard}></Route>\n     \n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n","const dashboard24HoursPerformanceChart = {\n  data: canvas => {\n    return {\n      labels: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\"\n      ],\n      datasets: [\n        {\n          borderColor: \"#6bd098\",\n          backgroundColor: \"#6bd098\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [300, 310, 316, 322, 330, 326, 333, 345, 338, 354]\n        },\n        {\n          borderColor: \"#f17e5d\",\n          backgroundColor: \"#f17e5d\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [320, 340, 365, 360, 370, 385, 390, 384, 408, 420]\n        },\n        {\n          borderColor: \"#fcc468\",\n          backgroundColor: \"#fcc468\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [370, 394, 415, 409, 425, 445, 460, 450, 478, 484]\n        }\n      ]\n    };\n  },\n  options: {\n    legend: {\n      display: false\n    },\n\n    tooltips: {\n      enabled: false\n    },\n\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            fontColor: \"#9f9f9f\",\n            beginAtZero: false,\n            maxTicksLimit: 5\n            //padding: 20\n          },\n          gridLines: {\n            drawBorder: false,\n            zeroLineColor: \"#ccc\",\n            color: \"rgba(255,255,255,0.05)\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(255,255,255,0.1)\",\n            zeroLineColor: \"transparent\",\n            display: false\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9f9f9f\"\n          }\n        }\n      ]\n    }\n  }\n};\n\nconst dashboardEmailStatisticsChart = {\n  data: canvas => {\n    return {\n      labels: [1, 2, 3],\n      datasets: [\n        {\n          label: \"Emails\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          backgroundColor: [\"#e3e3e3\", \"#4acccd\", \"#fcc468\", \"#ef8157\"],\n          borderWidth: 0,\n          data: [342, 480, 530, 120]\n        }\n      ]\n    };\n  },\n  options: {\n    legend: {\n      display: false\n    },\n\n    pieceLabel: {\n      render: \"percentage\",\n      fontColor: [\"white\"],\n      precision: 2\n    },\n\n    tooltips: {\n      enabled: false\n    },\n\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            display: false\n          },\n          gridLines: {\n            drawBorder: false,\n            zeroLineColor: \"transparent\",\n            color: \"rgba(255,255,255,0.05)\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(255,255,255,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            display: false\n          }\n        }\n      ]\n    }\n  }\n};\n\nconst dashboardNASDAQChart = {\n  data: {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    datasets: [\n      {\n        data: [0, 19, 15, 20, 30, 40, 40, 50, 25, 30, 50, 70],\n        fill: false,\n        borderColor: \"#fbc658\",\n        backgroundColor: \"transparent\",\n        pointBorderColor: \"#fbc658\",\n        pointRadius: 4,\n        pointHoverRadius: 4,\n        pointBorderWidth: 8\n      },\n      {\n        data: [0, 5, 10, 12, 20, 27, 30, 34, 42, 45, 55, 63],\n        fill: false,\n        borderColor: \"#51CACF\",\n        backgroundColor: \"transparent\",\n        pointBorderColor: \"#51CACF\",\n        pointRadius: 4,\n        pointHoverRadius: 4,\n        pointBorderWidth: 8\n      }\n    ]\n  },\n  options: {\n    legend: {\n      display: false,\n      position: \"top\"\n    }\n  }\n};\n\nmodule.exports = {\n  dashboard24HoursPerformanceChart,\n  dashboardEmailStatisticsChart,\n  dashboardNASDAQChart\n};\n"],"sourceRoot":""}